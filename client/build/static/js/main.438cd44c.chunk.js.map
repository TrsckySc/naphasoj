{"version":3,"sources":["utils/load-script.js","base/ace.js","pages/home.js","pages/base-data.js","pages/prefix.js","pages/project.js","router.js","pages/document.js","base/header.js","base/content.js","App.js","serviceWorker.js","index.js"],"names":["load","src","isAsync","Promise","resolve","reject","script","document","createElement","async","onload","onerror","body","appendChild","Ace","props","srcList","emp","forEach","a","LoadScript","then","setState","isLoadAce","catch","reason","console","error","state","React","forwardRef","render","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","this","window","ace","owner","editor","edit","setTheme","JavaScriptMode","require","Mode","session","setMode","tangideCompleter","identifierRegexps","getCompletions","pos","prefix","callback","length","autoCompleteData","name","value","caption","meta","type","score","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","addCompleter","commands","addCommand","bindKey","win","mac","exec","ele","getElementById","isFullScreen","mozIsFullScreen","webkitIsFullScreen","launchFullscreen","readOnly","getSession","setTabSize","on","e","getValue","initAce","id","style","width","height","position","lineHeight","fontSize","Component","Option","TextArea","Search","useForm","form","useState","forceUpdate","useEffect","layout","onFinish","values","onSearch","Item","placeholder","shouldUpdate","htmlType","HandleBtn","className","float","onClick","openDrawer","icon","PlusCircleOutlined","ImportOutlined","danger","deleteAllInterface","DeleteOutlined","PageTable","mockStatusList","label","columns","title","align","text","record","index","dataIndex","key","method","color","toUpperCase","CopyOutlined","defaultValue","isOpen","onChange","onHandleTableRow","_id","map","mockStatus","isLock","size","LockOutlined","UnlockOutlined","EyeOutlined","EditOutlined","onConfirm","okText","cancelText","dataSource","rowKey","pagination","HandleInterface","ref","useImperativeHandle","aceRef","useRef","isEdit","setIsEdit","mockData","setMockData","detailFormData","setDetailFormData","prefixList","setPrefixList","baseDataList","setBaseDataList","drawerType","Axios","post","drawerId","res","data","success","path","setFieldsValue","current","setValue","JSON5","parse","sourceData","JSON","stringify","mock","message","errorMsg","get","validateFields","jsonData","log","jsonValue","url","param","onSaveSuccess","span","labelCol","wrapperCol","initialValues","rules","required","autoComplete","Group","buttonStyle","code","href","target","Button","baseData","display","border","backgroundColor","tailLayout","offset","routes","component","filter","setFilter","tableList","setTableList","drawer","setDrawer","setDrawerType","setDrawerId","setProjectConfig","getListData","page","rows","list","handleInterfaceRef","handleTableRow","table","Object","assign","warning","keyboard","centered","maskClosable","content","onOk","history","push","initSearch","confirm","ExclamationCircleOutlined","okType","placement","destroyOnClose","forceRender","onClose","visible","footer","textAlign","marginRight","setTimeout","exact","setDataSource","setVisible","confirmLoading","setConfirmLoading","handleId","setHandleId","editBaseData","deleteBaseData","remark","aceData","getList","resetFields","onCancel","startsWith","delay","configId","setConfigId","changeOrigin","onFinishFailed","errorInfo","withRouter","count","i","location","pathname","mode","defaultSelectedKeys","to","Content","padding","minHeight","children","Header","Footer","RouteWithSubRoutes","route","App","zIndex","Boolean","hostname","match","ReactDOM","locale","zhCN","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2rBAiCA,SAASA,EAAKC,EAAKC,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOL,IAAMA,EACbK,EAAOG,MAAQP,EACfI,EAAOI,OAAS,WACdN,KAEFE,EAAOK,QAAU,WACfN,KAEFE,SAASK,KAAKC,YAAYP,MCzCvB,IAAMQ,EAAb,kDACE,WAAYC,GAAQ,IAAD,6BACjB,cAAMA,GDWH,SAAoBC,GACzB,IAAIC,GAAM,EAQV,OAPAD,EAAQE,QAAR,uCAAgB,WAAOjB,GAAP,SAAAkB,EAAA,+EAENnB,EAAKC,GAAK,GAFJ,sDAIZgB,GAAM,EAJM,wDAAhB,uDAOO,IAAId,SAAQ,SAACC,EAASC,GACvBY,EACFb,IAEAC,OCvBFe,CAAW,CACT,6BACA,sCACA,mCACA,uCACA,8CAECC,MAAK,WACJ,EAAKC,SAAS,CACZC,WAAW,OAGdC,OAAM,SAACC,GACNC,QAAQC,MAAM,SAAUF,MAE5B,EAAKG,MAAQ,CACXL,WAAW,GAEbM,IAAMC,WAAW,EAAKC,QApBL,EADrB,6DAwBmBC,GACXA,EAAQC,kBACVD,EAAQC,oBACCD,EAAQE,qBACjBF,EAAQE,uBACCF,EAAQG,wBACjBH,EAAQG,0BACCH,EAAQI,qBACjBJ,EAAQI,wBAhCd,uCAsCQ7B,SAAS8B,eACX9B,SAAS8B,iBACA9B,SAAS+B,oBAClB/B,SAAS+B,sBACA/B,SAASgC,sBAClBhC,SAASgC,yBA3Cf,gCAgDI,GAAKC,KAAKZ,MAAML,WAAckB,OAAOC,IAArC,CACA,IAAMC,EAAQH,KACRI,EAAUJ,KAAKI,OAASH,OAAOC,IAAIG,KAAK,kBAC9CD,EAAOE,SAAS,oBAChB,IAAIC,EAAiBN,OAAOC,IAAIM,QAAQ,iBAAiBC,KACzDL,EAAOM,QAAQC,QAAQ,IAAIJ,GAG3B,IAAIK,EAAmB,CACrBC,kBAAmB,CAAC,gCACpBC,eAAgB,SAAUV,EAAQM,EAASK,EAAKC,EAAQC,GACtD,OAAsB,IAAlBD,EAAOE,OACFD,EAAS,KAAM,IAEfA,EAAS,KAAME,KAKxBA,EAAmB,CACrB,CACEC,KAAM,cACNC,MAAO,UACPC,QAAS,UACTC,KAAM,cACNC,KAAM,QACNC,MAAO,KAET,CACEL,KAAM,cACNC,MAAO,UACPC,QAAS,UACTC,KAAM,cACNE,MAAO,KAET,CACEL,KAAM,eACNC,MAAO,WACPC,QAAS,WACTC,KAAM,eACNE,MAAO,MAUXrB,EAAOsB,WAAW,CAChBC,2BAA2B,EAC3BC,gBAAgB,EAChBC,0BAA0B,IAEZ5B,OAAOC,IAAIM,QAAQ,0BACzBsB,aAAalB,GAGvBR,EAAO2B,SAASC,WAAW,CACzBZ,KAAM,aACNa,QAAS,CAAEC,IAAK,aAAcC,IAAK,iBACnCC,KAAM,SAAUhC,GACd,IAAIiC,EAAMtE,SAASuE,eAAe,kBAEhCvE,SAASwE,cACTxE,SAASyE,iBACTzE,SAAS0E,mBAETtC,EAAMN,iBAENM,EAAMuC,iBAAiBL,IAG3BM,UAAU,IAIZvC,EAAOwC,aAAaC,WAAW,GAE/BzC,EAAOwC,aAAaE,GAAG,UAAU,SAAUC,EAAGpE,UAhIlD,iCAoII,OAAOqB,KAAKI,OAAO4C,aApIvB,2CAwIIhD,KAAKiD,YAxIT,+BA4II,OACE,yBACEC,GAAG,iBACHC,MAAO,CACLC,MAAO,OACPC,OAAQrD,KAAKzB,MAAM8E,QAAU,QAC7BC,SAAU,WACVC,WAAY,MACZC,SAAU,cApJpB,GAAyBnE,IAAMoE,W,QCoCvBC,E,IAAAA,OACAC,E,IAAAA,SA4OR,SAASC,EAAOrF,GAAQ,IAAD,EACN,IAAKsF,UAAbC,EADc,sBAEGC,qBAAfC,EAFY,oBAKrBC,qBAAU,WACRD,EAAY,MACX,IAMH,OACE,uBACEF,KAAMA,EACN1C,KAAK,mBACL8C,OAAO,SACPC,SATa,SAACC,GAChB7F,EAAM8F,SAASD,KAUb,sBAAME,KAAN,CAAWlD,KAAK,QACd,uBAAOmD,YAAY,gDAErB,sBAAMD,KAAN,CAAWlD,KAAK,OACd,uBAAOmD,YAAY,gDAErB,sBAAMD,KAAN,CAAWE,cAAc,IACtB,kBACC,uBAAQhD,KAAK,UAAUiD,SAAS,UAAhC,qBASV,SAASC,EAAUnG,GACjB,OACE,yBAAKoG,UAAU,wBACb,yBAAKxB,MAAO,CAAEyB,MAAO,SACnB,uBACEpD,KAAK,UACLqD,QAAS,kBAAMtG,EAAMuG,cACrBC,KAAM,kBAACC,EAAA,EAAD,OAHR,4BAOA,uBAAQxD,KAAK,SAASuD,KAAM,kBAACE,EAAA,EAAD,MAAoBN,UAAU,SAA1D,qCAIF,yBAAKxB,MAAO,CAAEyB,MAAO,UACnB,uBACEM,QAAM,EACNL,QAAS,kBAAMtG,EAAM4G,sBACrBJ,KAAM,kBAACK,EAAA,EAAD,OAHR,sDAYR,SAASC,GAAU9G,GACjB,IAAM+G,EAAiB,CACrB,CACEjE,MAAO,OACPkE,MAAO,sBAET,CACElE,MAAO,QACPkE,MAAO,uBAILC,EAAU,CACd,CACEC,MAAO,eACPrC,MAAO,GACPsC,MAAO,SACPnG,OAAQ,SAACoG,EAAMC,EAAQC,GAAf,gBAA4BA,EAAQ,KAE9C,CACEJ,MAAO,2BACPK,UAAW,OACXC,IAAK,QAEP,CACEN,MAAO,2BACPK,UAAW,SACXC,IAAK,SACLL,MAAO,SACPnG,OAAQ,SAACyG,GAAD,OACN,uBAAKC,MAAkB,SAAXD,EAAoB,UAAY,WACzCA,EAAOE,iBAId,CACET,MAAO,2BACPK,UAAW,SACXC,IAAK,UAEP,CACEN,MAAO,2BACPK,UAAW,OACXC,IAAK,OACLxG,OAAQ,SAACoG,GAAD,OACN,oCACE,kBAACQ,EAAA,EAAD,CAAcxB,UAAU,UACxB,8BAAOgB,MAIb,CACEF,MAAO,+BACPK,UAAW,SACXC,IAAK,SACL3C,MAAO,IACPsC,MAAO,SACPnG,OAAQ,SAACoG,EAAMC,EAAQC,GAAf,OACN,uBACEO,aAAcR,EAAOS,OAAS,OAAS,QACvClD,MAAO,CACLC,MAAO,IACP6C,MAAOL,EAAOS,OAAS,UAAY,WAErCC,SAAU,SAACjF,GAAD,OACR9C,EAAMgI,iBAAiB,aAAclF,EAAOuE,EAAOY,OAGpDlB,EAAemB,KAAI,SAACC,GACnB,OACE,kBAAChD,EAAD,CACErC,MAAOqF,EAAWrF,MAClB0E,IAAKW,EAAWrF,MAChB6B,GAAI0C,EAAOY,KAEVE,EAAWnB,aAOxB,CACEE,MAAO,eACPrC,MAAO,IACPsC,MAAO,SACPnG,OAAQ,SAACoG,EAAMC,EAAQC,GAAf,OACN,2BACGD,EAAOe,OACN,oCACE,uBACEnF,KAAK,OACLoF,KAAK,QACL/B,QAAS,kBACPtG,EAAMgI,iBAAiB,cAAc,EAAOX,EAAOY,MAErDzB,KAAM,kBAAC8B,EAAA,EAAD,SAIV,uBACErF,KAAK,OACLoF,KAAK,QACL/B,QAAS,kBACPtG,EAAMgI,iBAAiB,cAAc,EAAMX,EAAOY,MAEpDzB,KAAM,kBAAC+B,EAAA,EAAD,QAGV,uBACEF,KAAK,QACL/B,QAAS,kBAAMtG,EAAMgI,iBAAiB,OAAQ,KAAMX,EAAOY,MAC3DhF,KAAK,UACLuD,KAAM,kBAACgC,EAAA,EAAD,OAJR,gBAQEnB,EAAOe,OAsBL,KArBF,oCACE,uBACEC,KAAK,QACL/B,QAAS,kBAAMtG,EAAMgI,iBAAiB,OAAQ,KAAMX,EAAOY,MAC3DzB,KAAM,kBAACiC,EAAA,EAAD,OAHR,gBAOA,uBACEvB,MAAM,gEACNwB,UAAW,WACT1I,EAAMgI,iBAAiB,SAAU,KAAMX,EAAOY,MAEhDU,OAAO,eACPC,WAAW,sBAEX,uBAAQP,KAAK,QAAQ1B,QAAM,EAACH,KAAM,kBAACK,EAAA,EAAD,OAAlC,sBAWd,OACE,uBACEI,QAASA,EACT4B,WAAY7I,EAAM6I,WAClBC,OAAQ,SAACzB,GAAD,OAAYA,EAAOY,KAC3Bc,YAAY,IAKlB,IAAIC,GAAkB,SAAUhJ,EAAOiJ,GACrCC,8BAAoBD,GAAK,iBAAO,CAC9BrD,SAAU,WACRA,SAIJ,IAAMuD,EAASC,iBAAO,MAPoB,EAS3B,IAAK9D,UAAbC,EATmC,sBAWdC,oBAAS,GAXK,mBAWnC6D,EAXmC,KAW3BC,EAX2B,OAYV9D,mBAAS,MAZC,mBAYnC+D,EAZmC,KAYzBC,EAZyB,OAaEhE,mBAAS,IAbX,mBAanCiE,EAbmC,KAanBC,EAbmB,OAcNlE,mBAAS,IAdH,mBAcnCmE,EAdmC,KAcvBC,EAduB,OAeFpE,mBAAS,IAfP,mBAenCqE,EAfmC,KAerBC,EAfqB,KAiB1CpE,qBAAU,WAEJ1F,EAAM+J,YAAmC,QAArB/J,EAAM+J,YAC5BC,IAAMC,KAAK,4BAA6B,CAAEtF,GAAI3E,EAAMkK,WAAY5J,MAC9D,SAAC6J,GACC,GAAIA,EAAIC,KAAKC,QAAS,CACpB,IAAMD,EAAO,CACXvH,KAAMsH,EAAIC,KAAKA,KAAKvH,KACpByH,KAAMH,EAAIC,KAAKA,KAAKE,KACpB7C,OAAQ0C,EAAIC,KAAKA,KAAK3C,OACtBhF,OAAQ0H,EAAIC,KAAKA,KAAK3H,QAExB8C,EAAKgF,eAAeH,GACpBV,EAAkBU,GAElBjB,EAAOqB,QAAQ3I,OAAO4I,SACpBC,IAAMC,MAAMR,EAAIC,KAAKA,KAAKQ,aAE5BpB,EAAYqB,KAAKC,UAAUC,eAAKZ,EAAIC,KAAKA,KAAKA,MAAO,KAAM,SAE3DY,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,eAK9B,CAACjL,EAAM+J,WAAY/J,EAAMkK,SAAU3E,IAEtCG,qBAAU,WACRsE,IAAMkB,IAAI,wBAAwB5K,MAAK,SAAC6J,GAClCA,EAAIC,KAAKC,QACXT,EAAcO,EAAIC,KAAKA,MAEvBY,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,aAG3BjB,IAAMkB,IAAI,sBAAsB5K,MAAK,SAAC6J,GAChCA,EAAIC,KAAKC,QACXP,EAAgBK,EAAIC,KAAKA,MAEzBY,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,eAG1B,CAACrB,EAAeE,IAEnB,IAqBMlE,EAAW,WACfL,EACG4F,iBACA7K,MAAK,SAACuF,GACL,IAAMuF,EAlBM,WAChB,IAAKjC,EAAOqB,QAAQ/F,WAElB,OADAuG,EAAA,EAAQpK,MAAM,+CACP,EAET,IACE,OAAO8J,IAAMC,MAAMxB,EAAOqB,QAAQ/F,YAClC,MAAO/D,GAGP,OAFAC,QAAQ0K,IAAI3K,GACZsK,EAAA,EAAQpK,MAAM,kCACP,GAQY0K,GACjB,GAAKF,EAAL,CAEA,IAUIG,EAVEC,EAAQ,CACZ3I,KAAMgD,EAAOhD,KACbyH,KAAMzE,EAAOyE,KACbF,KAAMW,eAAKK,GACXR,WAAYF,IAAMI,UAAU3B,EAAOqB,QAAQ/F,YAC3CgD,OAAQ5B,EAAO4B,OACfhF,OAAQoD,EAAOpD,OACfqF,QAAQ,GAKN9H,EAAMkK,UACRqB,EAAM,wBACNC,EAAM7G,GAAK3E,EAAMkK,UAEjBqB,EAAM,qBAGRvB,IAAMC,KAAKsB,EAAKC,GAAOlL,MAAK,SAAC6J,GACvBA,EAAIC,KAAKC,SACXrK,EAAMyL,gBACNT,EAAA,EAAQX,QAAQ,6BAEhBW,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,iBAI5BxK,OAAM,SAACG,GACND,QAAQ0K,IAAIzK,OAIlB,OACE,2BAEE,uBAAK8K,KAAM,GAAItF,UAAU,SACvB,uBACET,OAAQ,CACNgG,SAAU,CAAED,KAAM,GAClBE,WAAY,CAAEF,KAAM,KAEtBnG,KAAMA,EACN1C,KAAK,QACLgJ,cAAe,CACbhJ,KAAM,GACNyH,KAAM,GACN7C,OAAQ,MACRhF,OAAQ,KAGV,wDACsB,SAArBzC,EAAM+J,WACL,sBAAMhE,KAAN,CACElD,KAAK,OACLiJ,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,iDAEnC,uBAAOgB,aAAa,SAGtB,4BACE,4BAAKvC,EAAe5G,OAIxB,wDACsB,SAArB7C,EAAM+J,WACL,sBAAMhE,KAAN,CAAWlD,KAAK,UACd,sBAAOoJ,MAAP,CAAaC,YAAY,SACvB,uBAAOpJ,MAAM,OAAb,OACA,uBAAOA,MAAM,QAAb,QACA,uBAAOA,MAAM,OAAb,OACA,uBAAOA,MAAM,UAAb,YAIJ,4BACE,4BAAK2G,EAAehC,SAIxB,wDACsB,SAArBzH,EAAM+J,WACL,sBAAMhE,KAAN,CAAWlD,KAAK,UACd,2BACE,sBAAQsC,OAAR,CAAerC,MAAM,IAArB,kCACC6G,EAAWzB,KAAI,SAACzF,GACf,OACE,sBAAQ0C,OAAR,CAAerC,MAAOL,EAAO0J,KAAM3E,IAAK/E,EAAO0J,MAC5C1J,EAAO0J,WAOlB,4BACE,4BAAK1C,EAAehH,SAIxB,wDACsB,SAArBzC,EAAM+J,WACL,sBAAMhE,KAAN,CACElD,KAAK,OACLiJ,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,iDAEnC,uBAAOgB,aAAa,SAGtB,4BACE,4BAAKvC,EAAea,SAM5B,uBAAKoB,KAAM,GAAItF,UAAU,SACvB,4BACE,0BAAMA,UAAU,SAAhB,4BACsB,SAArBpG,EAAM+J,WACL,uBAAGqC,KAAK,KAAKxH,MAAO,CAAE8C,MAAO,YAA7B,qDAGE,MAEgB,SAArB1H,EAAM+J,WACL,yBAAK3D,UAAU,YACb,sBAAO6F,MAAP,CACE7F,UAAU,aACVyB,aAAa,IACbQ,KAAK,QACL6D,YAAY,QACZnE,SAAU,SAACvD,GAAD,MACW,MAAnBA,EAAE6H,OAAOvJ,MAAgBwG,GAAU,GAAQA,GAAU,KAGvD,sBAAOgD,OAAP,CAAcxJ,MAAM,KAApB,gBACA,sBAAOwJ,OAAP,CAAcxJ,MAAM,KAApB,kBAEF,yBAAKsD,UAAU,eACb,uBACEyB,aAAa,GACbjD,MAAO,CAAEC,MAAO,KAChBwD,KAAK,QACLN,SA7KS,SAACT,GACtB6B,EAAOqB,QAAQ3I,OAAO4I,SACpBI,KAAKC,UAAUjB,EAAavC,GAAO8C,KAAM,KAAM,MA6KrC,kBAACjF,EAAD,CAAQrC,MAAM,IAAd,oDACC+G,EAAa3B,KAAI,SAACqE,EAAUjF,GAC3B,OACE,kBAACnC,EAAD,CAAQrC,MAAOwE,EAAOJ,MAAOqF,EAAS1J,KAAM2E,IAAKF,GAC9CiF,EAAS1J,YAOpB,KAEJ,yBAAKuD,UAAU,SACb,yBACExB,MAAO,CACL4H,QAA8B,SAArBxM,EAAM+J,YAAyBV,EAAS,QAAU,OAC3DoD,OAAQ,mBAGV,kBAAC,EAAD,CAAKxD,IAAKE,EAAQrE,OAAO,WAE3B,yBACEF,MAAO,CACL4H,QACuB,SAArBxM,EAAM+J,YAA0BV,EAAmB,OAAV,UAG7C,kBAACjE,EAAD,CACEtC,MAAOyG,EACP3E,MAAO,CAAEE,OAAQ,QAAS4H,gBAAiB,WAC3CtI,UAAQ,SAStB4E,GAAkBjI,qBAAWiI,I,ICjvBrB5D,G,IAAAA,SCdR,IAAMO,GAAS,CACbgG,SAAU,CAAED,KAAM,GAClBE,WAAY,CAAEF,KAAM,KCHtB,IAAM/F,GAAS,CACbgG,SAAU,CAAED,KAAM,GAClBE,WAAY,CAAEF,KAAM,IAEhBiB,GAAa,CACjBf,WAAY,CAAEgB,OAAQ,EAAGlB,KAAM,ICH1B,IAAMmB,GAAS,CACpB,CACEvC,KAAM,IACNwC,UJiCG,SAAc9M,GAAQ,IAAD,EACEwF,mBAAS,IADX,mBACnBuH,EADmB,KACXC,EADW,OAGQxH,mBAAS,IAHjB,mBAGnByH,EAHmB,KAGRC,EAHQ,OAKE1H,oBAAS,GALX,mBAKnB2H,EALmB,KAKXC,EALW,OAOU5H,mBAAS,MAPnB,mBAOnBuE,EAPmB,KAOPsD,EAPO,OASM7H,mBAAS,MATf,mBASnB0E,EATmB,KASToD,EATS,OAWgB9H,mBAAS,IAXzB,mBAWJ+H,GAXI,WAapBC,EAAc,SAAC3K,EAAM0I,EAAKkC,GAC9B,IAAMjC,EAAQ,CACZ3I,OACA0I,MACAkC,KAAM,EACNC,KAAM,IAER1D,IAAMC,KAAK,0BAA2BuB,GAAOlL,MAAK,SAAC6J,GAC7CA,EAAIC,KAAKC,SACX6C,EAAa/C,EAAIC,KAAKA,KAAKuD,UAM3BC,EAAqBxE,iBAAO,MAkClC,SAASyE,EAAe5K,EAAMH,EAAO6B,GACtB,eAAT1B,EAEF+G,IAAMC,KAAK,oCAAqC,CAC9CtF,KACAmD,OAAkB,SAAVhF,IACPxC,MAAK,SAAC6J,GACP,GAAIA,EAAIC,KAAKC,QAAS,CACpBW,EAAA,EAAQX,QAAkB,SAAVvH,EAAmB,2BAAS,kCAC5C,IAAMgL,EAAQb,EAAU/E,KAAI,SAACkC,GAC3B,OAAIzF,IAAOyF,EAAKnC,IACP8F,OAAOC,OAAO5D,EAAM,CACzBtC,OAAkB,SAAVhF,IAGLsH,KAGT8C,EAAaY,QAEb9C,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,aAGT,eAAThI,EAET+G,IAAMC,KAAK,oCAAqC,CAC9CtF,KACAyD,OAAQtF,IACPxC,MAAK,SAAC6J,GACP,GAAIA,EAAIC,KAAKC,QAAS,CACpBW,EAAA,EAAQX,QACNvH,EAAQ,6FAAoB,kCAE9B,IAAMgL,EAAQb,EAAU/E,KAAI,SAACkC,GAC3B,OAAIzF,IAAOyF,EAAKnC,IACP8F,OAAOC,OAAO5D,EAAM,CACzBhC,OAAQtF,IAGLsH,KAGT8C,EAAaY,QAEb9C,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,aAGT,WAAThI,EAET+G,IAAMC,KAAK,wBAAyB,CAClCtF,OACCrE,MAAK,SAAC6J,GACHA,EAAIC,KAAKC,UACXW,EAAA,EAAQX,QAAQ,4BAEhBmD,EAAYT,EAAOlK,KAAMkK,EAAOxB,SAIlB,SAATtI,GAEToK,EAAc,QACdC,EAAY3I,GACZyI,GAAU,IACQ,SAATnK,GAEToK,EAAc,QACdC,EAAY3I,GACZyI,GAAU,IACQ,QAATnK,IAEToK,EAAc,OACdC,EAAY,MACZF,GAAU,IA+Bd,OAxIA1H,qBAAU,WACR8H,EAAYT,EAAOlK,KAAMkK,EAAOxB,OAC/B,CAACwB,IAEJrH,qBAAU,WACRsE,IAAMkB,IAAI,mBAAmB5K,MAAK,SAAC6J,GAC7BA,EAAIC,KAAKC,SACXkD,EAAiBpD,EAAIC,KAAKA,MACrBD,EAAIC,KAAKA,KAAKiC,QAEjB,IAAM4B,QAAQ,CACZ/G,MAAO,eACPgH,UAAU,EACVC,UAAU,EACVC,cAAc,EACdzF,OAAQ,qBACR0F,QACE,6BACE,4KAGJC,KAXY,WAYVtO,EAAMuO,QAAQC,KAAK,gBAKzBxD,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,eAG1B,CAACsC,EAAkBvN,EAAMuO,UA2G1B,6BACE,kBAAClJ,EAAD,CACES,SAAU,SAACD,GACTmH,EAAUnH,MAGd,kBAACM,EAAD,CACEsI,WAAY,WACVjB,KAEFjH,WAAY,WACVsH,EAAe,MAAO,KAAM,OAE9BjH,mBAlCqB,WACzB,IAAM8H,QAAQ,CACZxH,MAAO,qEACPmH,QAAS,iFACT7H,KAAM,kBAACmI,EAAA,EAAD,MACNC,OAAQ,SACRjG,OAAQ,eACR2F,KANY,WAOVtE,IAAMkB,IAAI,6BAA6B5K,MAAK,SAAC6J,GACvCA,EAAIC,KAAKC,SACXW,EAAA,EAAQX,QAAQ,wFAChBmD,EAAYT,EAAOlK,KAAMkK,EAAOxB,MAEhCP,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,mBAuB7B,kBAACnE,GAAD,CACE+B,WAAYoE,EACZjF,iBAAkB6F,IAGpB,uBACE3G,MACiB,QAAf6C,EACI,2BACe,SAAfA,EACA,2BACA,2BAEN8E,UAAU,OACVC,gBAAgB,EAChBC,aAAa,EACbC,QAAS,kBAAM5B,GAAU,IACzB6B,QAAS9B,EACTtI,MAAM,MACNqK,OACE,yBACEtK,MAAO,CACLuK,UAAW,UAGb,uBAAQ7I,QAAS,kBAAM8G,GAAU,IAAQxI,MAAO,CAAEwK,YAAa,IAA/D,gBAGgB,SAAfrF,EACC,uBACE9G,KAAK,UACLqD,QAAS,WACPsH,EAAmBpD,QAAQ5E,aAH/B,gBAQE,OAIR,kBAAC,GAAD,CACEmE,WAAYA,EACZG,SAAUA,EACVjB,IAAK2E,EACLnC,cAxFR,WACE2B,GAAU,GACViC,YAAW,WACT7B,EAAYT,EAAOlK,KAAMkK,EAAOxB,OAC/B,WI/KH+D,OAAO,EACPpI,MAAO,4BAET,CACEoD,KAAM,aACNwC,UHMG,WAAqB,IAAD,EACWtH,mBAAS,IADpB,mBAClBqD,EADkB,KACN0G,EADM,OAEK/J,oBAAS,GAFd,mBAElByJ,EAFkB,KAETO,EAFS,OAGmBhK,oBAAS,GAH5B,mBAGlBiK,EAHkB,KAGFC,EAHE,OAIOlK,mBAAS,MAJhB,mBAIlBmK,EAJkB,KAIRC,EAJQ,KAKnBzG,EAASC,iBAAO,MALG,EAMV,IAAK9D,UAAbC,EANkB,oBAQnB0B,EAAU,CACd,CACEC,MAAO,eACPrC,MAAO,GACPsC,MAAO,SACPnG,OAAQ,SAACoG,EAAMC,EAAQC,GAAf,gBAA4BA,EAAQ,KAE9C,CACEJ,MAAO,eACPK,UAAW,OACXC,IAAK,QAEP,CACEN,MAAO,eACPK,UAAW,SACXC,IAAK,UAEP,CACEN,MAAO,eACPrC,MAAO,IACPsC,MAAO,SACPnG,OAAQ,SAACoG,EAAMC,EAAQC,GAAf,OACN,2BACE,uBACEe,KAAK,QACL/B,QAAS,kBAAMuJ,EAAaxI,EAAOY,MACnChF,KAAK,UACLuD,KAAM,kBAACiC,EAAA,EAAD,OAJR,gBAQA,uBACEvB,MAAM,4EACNwB,UAAW,WACToH,EAAezI,EAAOY,MAExBU,OAAO,eACPC,WAAW,sBAEX,uBAAQP,KAAK,QAAQ1B,QAAM,EAACH,KAAM,kBAACK,EAAA,EAAD,OAAlC,qBASVnB,qBAAU,WACHiK,GAAaV,GAElBjF,IAAMC,KAAK,2BAA4B,CAAEtF,GAAIgL,IAAYrP,MAAK,SAAC6J,GACzDA,EAAIC,KAAKC,SACX9E,EAAKgF,eAAe,CAClB1H,KAAMsH,EAAIC,KAAKA,KAAKvH,KACpBkN,OAAQ5F,EAAIC,KAAKA,KAAK2F,SAExB5G,EAAOqB,QAAQ3I,OAAO4I,SAASC,IAAMC,MAAMR,EAAIC,KAAKA,KAAK4F,WAEzDhF,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,eAG1B,CAAC0E,EAAUpK,EAAM0J,IAEpB,IAAMY,EAAe,SAAClL,GACpBiL,EAAYjL,GACZ6K,GAAW,IAGPM,EAAiB,SAACnL,GACtBqF,IAAMC,KAAK,wBAAyB,CAAEtF,OAAMrE,MAAK,SAAC6J,GAC5CA,EAAIC,KAAKC,SACXW,EAAA,EAAQX,QAAQ,4BAChB4F,KAEAjF,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,cAKvBgF,EAAU,WACdjG,IAAMkB,IAAI,sBAAsB5K,MAAK,SAAC6J,GAChCA,EAAIC,KAAKC,QACXkF,EAAcpF,EAAIC,KAAKA,MAEvBY,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,cAwD7B,OAnDAvF,qBAAU,WACRuK,MACC,IAkDD,6BACE,yBAAK7J,UAAU,SACb,uBACEnD,KAAK,UACLqD,QAAS,WACPkJ,GAAW,GACXI,EAAY,QAJhB,iBAUF,uBACE/G,WAAYA,EACZ5B,QAASA,EACT6B,OAAQ,SAACzB,GAAD,OAAYA,EAAOY,KAC3Bc,YAAY,IAEd,uBACE7B,MAAM,uCACN+H,QAASA,EACTX,KAtDW,WACf/I,EACG4F,iBACA7K,MAAK,SAACuF,GACL,IAAMuF,EAlBM,WAChB,IAAKjC,EAAOqB,QAAQ/F,WAElB,OADAuG,EAAA,EAAQpK,MAAM,+CACP,EAET,IACE,OAAO8J,IAAMC,MAAMxB,EAAOqB,QAAQ/F,YAClC,MAAO/D,GAGP,OAFAC,QAAQ0K,IAAI3K,GACZsK,EAAA,EAAQpK,MAAM,kCACP,GAQY0K,GACjB,GAAKF,EAAL,CACA,IAAMI,EAAQ,CACZ3I,KAAMgD,EAAOhD,KACbkN,OAAQlK,EAAOkK,OACf3F,KAAMW,eAAKK,GACX4E,QAAStF,IAAMI,UAAU3B,EAAOqB,QAAQ/F,aAEtCkL,IAEFnE,EAAM7G,GAAKgL,GAEbD,GAAkB,GAClB1F,IAAMC,KAAK,wBAAyBuB,GAAOlL,MAAK,SAAC6J,GAC3CA,EAAIC,KAAKC,SACX9E,EAAK2K,cACLR,GAAkB,GAClBvG,EAAOqB,QAAQ3I,OAAO4I,SAAS,IAC/BO,EAAA,EAAQX,QAAQ,4BAChB4F,IACAT,GAAW,IAEXxE,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,iBAI5BxK,OAAM,SAACC,GAAD,OAAYC,QAAQ0K,IAAI3K,OAyB7ByP,SAAU,kBAAMX,GAAW,IAC3BrB,UAAU,EACVsB,eAAgBA,EAChBV,aAAa,EACblK,MAAO,KAEP,2BACE,uBAAK6G,KAAM,EAAGtF,UAAU,SACtB,uBACEb,KAAMA,EACN1C,KAAK,QACL8C,OAAO,WACPkG,cAAe,CACbhJ,KAAM,GACNkN,OAAQ,KAGV,sBAAMhK,KAAN,CACEiB,MAAM,eACNnE,KAAK,OACLiJ,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,oCAEnC,6BAGF,sBAAMjF,KAAN,CAAWiB,MAAM,eAAKnE,KAAK,UACzB,kBAAC,GAAD,CAAUmJ,aAAa,WAI7B,uBAAKN,KAAM,IACT,wDACA,kBAAC,EAAD,CAAKzC,IAAKE,EAAQrE,OAAO,eGjNjCoC,MAAO,wCAQT,CACEoD,KAAM,UACNwC,UFjBG,WAAmB,IAAD,EACatH,mBAAS,IADtB,mBAChBqD,EADgB,KACJ0G,EADI,OAEO/J,oBAAS,GAFhB,mBAEhByJ,EAFgB,KAEPO,EAFO,OAGqBhK,oBAAS,GAH9B,mBAGhBiK,EAHgB,KAGAC,EAHA,OAIR,IAAKpK,UAAbC,EAJgB,oBAiBjB0B,EAAU,CACd,CACEC,MAAO,eACPrC,MAAO,GACPsC,MAAO,SACPnG,OAAQ,SAACoG,EAAMC,EAAQC,GAAf,gBAA4BA,EAAQ,KAE9C,CACEJ,MAAO,eACPK,UAAW,OACXC,IAAK,QAEP,CACEN,MAAO,eACPK,UAAW,SACXC,IAAK,UAEP,CACEN,MAAO,eACPrC,MAAO,IACPsC,MAAO,SACPnG,OAAQ,SAACoG,EAAMC,EAAQC,GAAf,OACN,uBACEJ,MAAM,gEACNwB,UAAW,WAnCE,IAAC/D,IAoCC0C,EAAOY,IAnC5B+B,IAAMC,KAAK,qBAAsB,CAAEtF,GAAIA,IAAMrE,MAAK,SAAC6J,GAC7CA,EAAIC,KAAKC,SACXW,EAAA,EAAQX,QAAQ,4BAChB4F,KAEAjF,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,cAgCrBtC,OAAO,eACPC,WAAW,sBAEX,uBAAQP,KAAK,QAAQ1B,QAAM,EAACH,KAAM,kBAACK,EAAA,EAAD,OAAlC,oBAQFoJ,EAAU,WACdjG,IAAMkB,IAAI,wBAAwB5K,MAAK,SAAC6J,GAClCA,EAAIC,KAAKC,QACXkF,EAAcpF,EAAIC,KAAKA,MAEvBY,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,cAgC7B,OA3BAvF,qBAAU,WACRuK,MACC,IA0BD,6BACE,yBAAK7J,UAAU,SACb,uBAAQnD,KAAK,UAAUqD,QAAS,kBAAMkJ,GAAW,KAAjD,iBAIF,uBACE3G,WAAYA,EACZ5B,QAASA,EACT6B,OAAQ,SAACzB,GAAD,OAAYA,EAAOY,KAC3Bc,YAAY,IAEd,uBACE7B,MAAM,2BACN+H,QAASA,EACTX,KAvCW,WACf/I,EACG4F,iBACA7K,MAAK,SAACuF,GACL,IAAM2F,EAAQ,CACZW,KAAMtG,EAAOsG,KAAKiE,WAAW,KAAOvK,EAAOsG,KAArC,WAAgDtG,EAAOsG,MAC7D4D,OAAQlK,EAAOkK,QAEjBL,GAAkB,GAClB1F,IAAMC,KAAK,kBAAmBuB,GAAOlL,MAAK,SAAC6J,GACrCA,EAAIC,KAAKC,SACXqF,GAAkB,GAClBnK,EAAK2K,cACLV,GAAW,GACXS,KAEAjF,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,gBAI5BxK,OAAM,SAACC,GAAD,OAAYC,QAAQ0K,IAAI3K,OAoB7ByP,SAAU,kBAAMX,GAAW,IAC3BrB,UAAU,EACVsB,eAAgBA,GAEhB,qCACElK,KAAMA,GACFI,GAFN,CAGE9C,KAAK,QACLgJ,cAAe,CACbM,KAAM,GACNkE,MAAO,OAGT,sBAAMtK,KAAN,CACEiB,MAAM,eACNnE,KAAK,OACLiJ,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,gDAEnC,6BAGF,sBAAMjF,KAAN,CAAWiB,MAAM,eAAKnE,KAAK,UACzB,uBAAOmJ,aAAa,aEjH5B9E,MAAO,wCAET,CACEoD,KAAM,WACNwC,UDpBG,WAAoB,IAAD,EACT,IAAKxH,UAAbC,EADiB,sBAGQC,mBAAS,MAHjB,mBAGjB8K,EAHiB,KAGPC,EAHO,KAyCxB,OArCA7K,qBAAU,WACRsE,IAAMkB,IAAI,mBAAmB5K,MAAK,SAAC6J,GACjC,GAAIA,EAAIC,KAAKC,QAAS,CACpB,IAAKF,EAAIC,KAAKA,KAAKiC,OAAQ,OAC3B9G,EAAKgF,eAAe,CAClB8B,OAAQlC,EAAIC,KAAKA,KAAKiC,OACtBgE,MAAOlG,EAAIC,KAAKA,KAAKiG,MACrBG,aAAcrG,EAAIC,KAAKA,KAAKoG,eAE9BD,EAAYpG,EAAIC,KAAKA,KAAKnC,UAE1B+C,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,eAG1B,CAACsF,EAAahL,IAwBf,yBAAKa,UAAU,QACb,qCACEb,KAAMA,GACFI,GAFN,CAGE9C,KAAK,QACLgJ,cAAe,CACb2E,cAAc,EACdH,MAAO,KAETzK,SA/BW,SAACC,GAChBlF,QAAQ0K,IAAI,WAAYxF,GACxB,IAAM2F,EAAQ,CACZa,OAAQxG,EAAOwG,OACfgE,MAAOxK,EAAOwK,MACd1L,GAAI2L,EACJE,aAAc3K,EAAO2K,cAEvBxG,IAAMC,KAAK,qBAAsBuB,GAAOlL,MAAK,SAAC6J,GACxCA,EAAIC,KAAKC,QACXW,EAAA,EAAQX,QAAQ,4BAEhBW,EAAA,EAAQpK,MAAMuJ,EAAIC,KAAKa,cAoBvBwF,eAfiB,SAACC,GACtB/P,QAAQ0K,IAAI,UAAWqF,MAgBnB,sBAAM3K,KAAN,CACEiB,MAAM,2BACNnE,KAAK,SACLiJ,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,4DAEnC,6BAGF,sBAAMjF,KAAN,CACEiB,MAAM,2BACNnE,KAAK,QACLiJ,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,iEAEnC,uBAAOgB,aAAa,SAGtB,sBAAMjG,KAAN,CAAWiB,MAAM,2BAAOnE,KAAK,gBAC3B,sBAAOoJ,MAAP,KACE,uBAAOnJ,OAAO,GAAd,gBACA,uBAAOA,OAAO,GAAd,wBAIJ,sBAAMiD,KAAS4G,GACb,uBAAQ1J,KAAK,UAAUiD,SAAS,UAAhC,oBCzDNgB,MAAO,wCAET,CACEoD,KAAM,YACNwC,UClCG,WACL,OACE,0CDiCA5F,MAAO,6BEDIyJ,oBA/Bf,SAAgB3Q,GAEd,IADA,IAAI4Q,EAAQ,IACHC,EAAI,EAAGA,EAAIhE,GAAOlK,OAAQkO,IAC7BhE,GAAOgE,GAAGvG,OAAStK,EAAMuO,QAAQuC,SAASC,WAC5CH,EAAK,UAAMC,EAAI,IAGnB,OACE,kBAAC,WAAD,KACE,yBAAKjM,MAAO,CAAEyB,MAAO,OAAQpB,SAAU,OAAQmK,YAAa,OAAQtK,OAAQ,SAA5E,aAAiG,wCACjG,uBAAMkM,KAAK,aAAaC,oBAAqB,CAACL,IAC5C,sBAAM7K,KAAN,CAAWyB,IAAI,KACb,kBAAC,IAAD,CAAM0J,GAAG,KAAT,6BAEF,sBAAMnL,KAAN,CAAWyB,IAAI,KACb,kBAAC,IAAD,CAAM0J,GAAG,cAAT,yCAEF,sBAAMnL,KAAN,CAAWyB,IAAI,KACb,kBAAC,IAAD,CAAM0J,GAAG,WAAT,yCAEF,sBAAMnL,KAAN,CAAWyB,IAAI,KACb,kBAAC,IAAD,CAAM0J,GAAG,YAAT,yCAEF,sBAAMnL,KAAN,CAAWyB,IAAI,KACb,kBAAC,IAAD,CAAM0J,GAAG,aAAT,kC,mBC1BK,SAASC,GAAQnR,GAK9B,OACE,yBAAK4E,MALM,CACXwM,QAAS,mBACTC,UAAW,uBAIT,wBAAYzM,MAAO,CAAEwM,QAAS,WAC5B,uBAAYrL,KAAZ,kCAED/F,EAAMsR,U,ICNLC,G,IAAAA,OAAQC,G,IAAAA,OAAQL,G,IAAAA,QAkCxB,SAASM,GAAmBC,GAE1B,OADAlS,SAAS0H,MAAQwK,EAAMxK,MAErB,kBAAC,IAAD,CACEoI,MAAOoC,EAAMpC,MACbhF,KAAMoH,EAAMpH,KACZtJ,OAAQ,SAAChB,GAAD,OAEN,kBAAC0R,EAAM5E,UAAP,iBAAqB9M,EAArB,CAA4B6M,OAAQ6E,EAAM7E,aAMnC8E,OA9Cf,WACE,OACE,kBAAC,IAAD,KACE,2BACE,kBAAC,GAAD,CACEvL,UAAU,SACVxB,MAAO,CACLG,SAAU,QACV6M,OAAQ,EACR/M,MAAO,OACPuM,QAAS,WAGX,kBAAC,GAAD,OAEF,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACGvE,GAAO3E,KAAI,SAACwJ,EAAOb,GAAR,OACV,kBAACY,GAAD,eAAoBjK,IAAKkK,EAAMpH,MAAUoH,UAKjD,kBAACF,GAAD,CAAQ5M,MAAO,CAAEuK,UAAW,SAAUiC,QAAS,SAA/C,qFCrBYS,QACW,cAA7BnQ,OAAOoP,SAASgB,UAEe,UAA7BpQ,OAAOoP,SAASgB,UAEhBpQ,OAAOoP,SAASgB,SAASC,MACvB,2D,cCVNC,IAAShR,OACP,uBAAgBiR,OAAQC,MACtB,kBAAC,GAAD,OAEF1S,SAASuE,eAAe,SDuHpB,kBAAmBoO,WACrBA,UAAUC,cAAcC,MACrB/R,MAAK,SAAAgS,GACJA,EAAaC,gBAEd9R,OAAM,SAAAG,GACLD,QAAQC,MAAMA,EAAMoK,c","file":"static/js/main.438cd44c.chunk.js","sourcesContent":["/**\n * 批量异步加载script脚本\n * @param {*} srcList src地址集合\n */\nexport function AsyncLoadScript(srcList) {\n  let scPromise = [];\n  srcList.forEach((src) => {\n    scPromise.push(load(src, true));\n  });\n  return Promise.all(scPromise);\n}\n\n/**\n * 批量同步加载script脚本\n * @param {*} srcList \n */\nexport function LoadScript(srcList) {\n  let emp = true;\n  srcList.forEach(async (src) => {\n    try {\n      await load(src, false);\n    } catch (reason) {\n      emp = false;\n    }\n  });\n  return new Promise((resolve, reject) => {\n    if (emp) {\n      resolve();\n    } else {\n      reject();\n    }\n  });\n}\nfunction load(src, isAsync) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.async = isAsync;\n    script.onload = function () {\n      resolve();\n    };\n    script.onerror = function () {\n      reject();\n    };\n    document.body.appendChild(script);\n  });\n}\n","import React from \"react\";\r\nimport { LoadScript } from \"../utils/load-script\";\r\n\r\nexport class Ace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    LoadScript([\r\n      \"./lib/ace-1.4.4/src/ace.js\",\r\n      \"./lib/ace-1.4.4/src/theme-chrome.js\",\r\n      \"./lib/ace-1.4.4/src/mode-json.js\",\r\n      \"./lib/ace-1.4.4/src/snippets/json.js\",\r\n      \"./lib/ace-1.4.4/src/ext-language_tools.js\",\r\n    ])\r\n      .then(() => {\r\n        this.setState({\r\n          isLoadAce: true,\r\n        });\r\n      })\r\n      .catch((reason) => {\r\n        console.error(\">>>>>>\", reason);\r\n      });\r\n    this.state = {\r\n      isLoadAce: false,\r\n    };\r\n    React.forwardRef(this.render);\r\n  }\r\n  // 启动全屏\r\n  launchFullscreen(element) {\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  // 退出全屏\r\n  exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n\r\n  initAce() {\r\n    if (!this.state.isLoadAce || !window.ace) return;\r\n    const owner = this;\r\n    const editor = (this.editor = window.ace.edit(\"interface-data\"));\r\n    editor.setTheme(\"ace/theme/chrome\"); //设置主题\r\n    var JavaScriptMode = window.ace.require(\"ace/mode/json\").Mode;\r\n    editor.session.setMode(new JavaScriptMode()); //设置程序语言模式\r\n\r\n    // 设置自动补全\r\n    var tangideCompleter = {\r\n      identifierRegexps: [/[a-zA-Z_0-9@\\-\\u00A2-\\uFFFF]/],\r\n      getCompletions: function (editor, session, pos, prefix, callback) {\r\n        if (prefix.length === 0) {\r\n          return callback(null, []);\r\n        } else {\r\n          return callback(null, autoCompleteData);\r\n        }\r\n      },\r\n    };\r\n    // 自定义补全列表\r\n    var autoCompleteData = [\r\n      {\r\n        name: \"mock string\",\r\n        value: \"@string\",\r\n        caption: \"@string\",\r\n        meta: \"Mock-String\",\r\n        type: \"local\",\r\n        score: 1000,\r\n      },\r\n      {\r\n        name: \"mock number\",\r\n        value: \"@number\",\r\n        caption: \"@number\",\r\n        meta: \"Mock-Number\",\r\n        score: 1000,\r\n      },\r\n      {\r\n        name: \"mock integer\",\r\n        value: \"@integer\",\r\n        caption: \"@integer\",\r\n        meta: \"Mock-Integer\",\r\n        score: 1000,\r\n      },\r\n      // {\r\n      //   name: \"mock image\",\r\n      //   value: Random.image(\"200x100\"),\r\n      //   caption: \"@image\",\r\n      //   meta: \"Mock-Image\",\r\n      //   score: 1000,\r\n      // },\r\n    ];\r\n    editor.setOptions({\r\n      enableBasicAutocompletion: true,\r\n      enableSnippets: true,\r\n      enableLiveAutocompletion: true,\r\n    });\r\n    var langTools = window.ace.require(\"ace/ext/language_tools\");\r\n    langTools.addCompleter(tangideCompleter);\r\n\r\n    // 设置全屏\r\n    editor.commands.addCommand({\r\n      name: \"fullscreen\",\r\n      bindKey: { win: \"Ctrl-Enter\", mac: \"Command-Enter\" },\r\n      exec: function (editor) {\r\n        var ele = document.getElementById(\"interface-data\");\r\n        if (\r\n          document.isFullScreen ||\r\n          document.mozIsFullScreen ||\r\n          document.webkitIsFullScreen\r\n        ) {\r\n          owner.exitFullscreen();\r\n        } else {\r\n          owner.launchFullscreen(ele);\r\n        }\r\n      },\r\n      readOnly: true, // 只读下设置可以全屏展示\r\n    });\r\n\r\n    // editor.getSession().setUseWrapMode(true);//设置折叠 默认折叠的\r\n    editor.getSession().setTabSize(2); // 设置制表符大小\r\n    // 改变事件\r\n    editor.getSession().on(\"change\", function (e, a) {});\r\n  }\r\n\r\n  getValue() {\r\n    return this.editor.getValue();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.initAce();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"interface-data\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: this.props.height || \"300px\",\r\n          position: \"relative\",\r\n          lineHeight: \"1.5\",\r\n          fontSize: \"14px\",\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Tag,\r\n  Select,\r\n  Space,\r\n  message,\r\n  Popconfirm,\r\n  Drawer,\r\n  Row,\r\n  Col,\r\n  Radio,\r\n  Modal,\r\n} from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  ImportOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  EyeOutlined,\r\n  LockOutlined,\r\n  UnlockOutlined,\r\n  CopyOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport JSON5 from \"json5\";\r\nimport { Ace } from \"../base/ace\";\r\nimport { mock } from \"mockjs\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nexport function Home(props) {\r\n  const [filter, setFilter] = useState({});\r\n\r\n  const [tableList, setTableList] = useState([]);\r\n\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  const [drawerType, setDrawerType] = useState(null);\r\n\r\n  const [drawerId, setDrawerId] = useState(null);\r\n\r\n  const [projectConfig, setProjectConfig] = useState({});\r\n\r\n  const getListData = (name, url, page) => {\r\n    const param = {\r\n      name,\r\n      url,\r\n      page: 1,\r\n      rows: 20,\r\n    };\r\n    Axios.post(\"/api/get-interface-list\", param).then((res) => {\r\n      if (res.data.success) {\r\n        setTableList(res.data.data.list);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInterfaceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    getListData(filter.name, filter.url, 1);\r\n  }, [filter]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"/api/get-config\").then((res) => {\r\n      if (res.data.success) {\r\n        setProjectConfig(res.data.data);\r\n        if (!res.data.data.target) {\r\n          // 跳转项目配置页面\r\n          Modal.warning({\r\n            title: \"警告\",\r\n            keyboard: false,\r\n            centered: true,\r\n            maskClosable: false,\r\n            okText: \"去设置\",\r\n            content: (\r\n              <div>\r\n                <p>检测到你还没有维护代理地址, 请先维护项目代理地址</p>\r\n              </div>\r\n            ),\r\n            onOk() {\r\n              props.history.push(\"/project\");\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setProjectConfig, props.history]);\r\n\r\n  function handleTableRow(type, value, id) {\r\n    if (type === \"changeMock\") {\r\n      // 切换mock状态\r\n      Axios.post(\"/api/change-interface-mock-status\", {\r\n        id,\r\n        isOpen: value === \"open\",\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(value === \"open\" ? \"成功启用\" : \"接口已停用\");\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isOpen: value === \"open\",\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"changeLock\") {\r\n      // 切换锁\r\n      Axios.post(\"/api/change-interface-lock-status\", {\r\n        id,\r\n        isLock: value,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\r\n            value ? \"接口已锁，将无法编辑与删除操作\" : \"接口已解锁\"\r\n          );\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isLock: value,\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"delete\") {\r\n      // 删除接口\r\n      Axios.post(\"/api/delete-interface\", {\r\n        id,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\"删除成功\");\r\n          // 重新查询数据\r\n          getListData(filter.name, filter.url, 1);\r\n        } else {\r\n        }\r\n      });\r\n    } else if (type === \"edit\") {\r\n      // 编辑接口\r\n      setDrawerType(\"edit\");\r\n      setDrawerId(id);\r\n      setDrawer(true);\r\n    } else if (type === \"look\") {\r\n      // 查看接口\r\n      setDrawerType(\"look\");\r\n      setDrawerId(id);\r\n      setDrawer(true);\r\n    } else if (type === \"add\") {\r\n      // 新增接口\r\n      setDrawerType(\"add\");\r\n      setDrawerId(null);\r\n      setDrawer(true);\r\n    }\r\n  }\r\n\r\n  function saveSuccess() {\r\n    setDrawer(false);\r\n    setTimeout(() => {\r\n      getListData(filter.name, filter.url, 1);\r\n    }, 320);\r\n  }\r\n\r\n  const deleteAllInterface = () => {\r\n    Modal.confirm({\r\n      title: \"您确认要删除所有接口？\",\r\n      content: \"已经被锁定的接口不会被删除\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okType: \"danger\",\r\n      okText: \"删除\",\r\n      onOk() {\r\n        Axios.get(\"/api/delete-all-interface\").then((res) => {\r\n          if (res.data.success) {\r\n            message.success(\"已成功清空所有未被锁定的接口\");\r\n            getListData(filter.name, filter.url, 1);\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        onSearch={(values) => {\r\n          setFilter(values);\r\n        }}\r\n      ></Search>\r\n      <HandleBtn\r\n        initSearch={() => {\r\n          getListData();\r\n        }}\r\n        openDrawer={() => {\r\n          handleTableRow(\"add\", null, null);\r\n        }}\r\n        deleteAllInterface={deleteAllInterface}\r\n      ></HandleBtn>\r\n      <PageTable\r\n        dataSource={tableList}\r\n        onHandleTableRow={handleTableRow}\r\n      ></PageTable>\r\n\r\n      <Drawer\r\n        title={\r\n          drawerType === \"add\"\r\n            ? \"新增接口\"\r\n            : drawerType === \"edit\"\r\n            ? \"编辑接口\"\r\n            : \"查看接口\"\r\n        }\r\n        placement=\"left\"\r\n        destroyOnClose={true}\r\n        forceRender={true}\r\n        onClose={() => setDrawer(false)}\r\n        visible={drawer}\r\n        width=\"80%\"\r\n        footer={\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button onClick={() => setDrawer(false)} style={{ marginRight: 8 }}>\r\n              关闭\r\n            </Button>\r\n            {drawerType !== \"look\" ? (\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  handleInterfaceRef.current.onFinish();\r\n                }}\r\n              >\r\n                保存\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      >\r\n        <HandleInterface\r\n          drawerType={drawerType}\r\n          drawerId={drawerId}\r\n          ref={handleInterfaceRef}\r\n          onSaveSuccess={saveSuccess}\r\n        ></HandleInterface>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState();\r\n\r\n  // To disable submit button at the beginning.\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    props.onSearch(values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"horizontal_login\"\r\n      layout=\"inline\"\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item name=\"name\">\r\n        <Input placeholder=\"请输入接口名称\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"url\">\r\n        <Input placeholder=\"请输入接口地址\" />\r\n      </Form.Item>\r\n      <Form.Item shouldUpdate={true}>\r\n        {() => (\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            查 询\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction HandleBtn(props) {\r\n  return (\r\n    <div className=\"pt-20 pb-20 clearfix\">\r\n      <div style={{ float: \"left\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => props.openDrawer()}\r\n          icon={<PlusCircleOutlined />}\r\n        >\r\n          新建接口\r\n        </Button>\r\n        <Button type=\"dashed\" icon={<ImportOutlined />} className=\"ml-20\">\r\n          导入Swagger 接口\r\n        </Button>\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <Button\r\n          danger\r\n          onClick={() => props.deleteAllInterface()}\r\n          icon={<DeleteOutlined />}\r\n        >\r\n          清空当前所有接口\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PageTable(props) {\r\n  const mockStatusList = [\r\n    {\r\n      value: \"open\",\r\n      label: \"启用中\",\r\n    },\r\n    {\r\n      value: \"close\",\r\n      label: \"停用中\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      width: 70,\r\n      align: \"center\",\r\n      render: (text, record, index) => `${index + 1}`,\r\n    },\r\n    {\r\n      title: \"接口名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"接口类型\",\r\n      dataIndex: \"method\",\r\n      key: \"method\",\r\n      align: \"center\",\r\n      render: (method) => (\r\n        <Tag color={method === \"POST\" ? \"#52c41a\" : \"#1890ff\"}>\r\n          {method.toUpperCase()}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"接口前缀\",\r\n      dataIndex: \"prefix\",\r\n      key: \"prefix\",\r\n    },\r\n    {\r\n      title: \"接口地址\",\r\n      dataIndex: \"path\",\r\n      key: \"path\",\r\n      render: (text) => (\r\n        <>\r\n          <CopyOutlined className=\"pr-10\" />\r\n          <span>{text}</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mock启用状态\",\r\n      dataIndex: \"isOpen\",\r\n      key: \"isOpen\",\r\n      width: 150,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Select\r\n          defaultValue={record.isOpen ? \"open\" : \"close\"}\r\n          style={{\r\n            width: 100,\r\n            color: record.isOpen ? \"#52c41a\" : \"#ff4d4f\",\r\n          }}\r\n          onChange={(value) =>\r\n            props.onHandleTableRow(\"changeMock\", value, record._id)\r\n          }\r\n        >\r\n          {mockStatusList.map((mockStatus) => {\r\n            return (\r\n              <Option\r\n                value={mockStatus.value}\r\n                key={mockStatus.value}\r\n                id={record._id}\r\n              >\r\n                {mockStatus.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      ),\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: 270,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Space>\r\n          {record.isLock ? (\r\n            <>\r\n              <Button\r\n                type=\"link\"\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  props.onHandleTableRow(\"changeLock\", false, record._id)\r\n                }\r\n                icon={<LockOutlined />}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Button\r\n              type=\"link\"\r\n              size=\"small\"\r\n              onClick={() =>\r\n                props.onHandleTableRow(\"changeLock\", true, record._id)\r\n              }\r\n              icon={<UnlockOutlined />}\r\n            />\r\n          )}\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => props.onHandleTableRow(\"look\", null, record._id)}\r\n            type=\"primary\"\r\n            icon={<EyeOutlined />}\r\n          >\r\n            查看\r\n          </Button>\r\n          {!record.isLock ? (\r\n            <>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => props.onHandleTableRow(\"edit\", null, record._id)}\r\n                icon={<EditOutlined />}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Popconfirm\r\n                title=\"您确定要删除该接口吗?\"\r\n                onConfirm={() => {\r\n                  props.onHandleTableRow(\"delete\", null, record._id);\r\n                }}\r\n                okText=\"确定\"\r\n                cancelText=\"不删了\"\r\n              >\r\n                <Button size=\"small\" danger icon={<DeleteOutlined />}>\r\n                  删除\r\n                </Button>\r\n              </Popconfirm>\r\n            </>\r\n          ) : null}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={props.dataSource}\r\n      rowKey={(record) => record._id}\r\n      pagination={false}\r\n    />\r\n  );\r\n}\r\n\r\nlet HandleInterface = function (props, ref) {\r\n  useImperativeHandle(ref, () => ({\r\n    onFinish: () => {\r\n      onFinish();\r\n    },\r\n  }));\r\n\r\n  const aceRef = useRef(null);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [isEdit, setIsEdit] = useState(true);\r\n  const [mockData, setMockData] = useState(null);\r\n  const [detailFormData, setDetailFormData] = useState({});\r\n  const [prefixList, setPrefixList] = useState([]);\r\n  const [baseDataList, setBaseDataList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 非新增接口查询详情\r\n    if (props.drawerType && props.drawerType !== \"add\") {\r\n      Axios.post(\"/api/get-interface-detail\", { id: props.drawerId }).then(\r\n        (res) => {\r\n          if (res.data.success) {\r\n            const data = {\r\n              name: res.data.data.name,\r\n              path: res.data.data.path,\r\n              method: res.data.data.method,\r\n              prefix: res.data.data.prefix,\r\n            };\r\n            form.setFieldsValue(data);\r\n            setDetailFormData(data);\r\n            // 回显json5数据\r\n            aceRef.current.editor.setValue(\r\n              JSON5.parse(res.data.data.sourceData)\r\n            );\r\n            setMockData(JSON.stringify(mock(res.data.data.data), null, 4));\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [props.drawerType, props.drawerId, form]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"/api/get-prefix-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setPrefixList(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n    Axios.get(\"/api/get-base-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setBaseDataList(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setPrefixList, setBaseDataList]);\r\n\r\n  const changeBaseData = (index) => {\r\n    aceRef.current.editor.setValue(\r\n      JSON.stringify(baseDataList[index].data, null, 2)\r\n    );\r\n  };\r\n\r\n  // 获取响应数据\r\n  const jsonValue = () => {\r\n    if (!aceRef.current.getValue()) {\r\n      message.error(\"请输入响应数据\");\r\n      return false;\r\n    }\r\n    try {\r\n      return JSON5.parse(aceRef.current.getValue());\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      message.error(\"json 解析出错\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onFinish = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        const jsonData = jsonValue();\r\n        if (!jsonData) return;\r\n\r\n        const param = {\r\n          name: values.name,\r\n          path: values.path,\r\n          data: mock(jsonData),\r\n          sourceData: JSON5.stringify(aceRef.current.getValue()),\r\n          method: values.method,\r\n          prefix: values.prefix,\r\n          isOpen: true,\r\n        };\r\n\r\n        let url;\r\n\r\n        if (props.drawerId) {\r\n          url = \"/api/update-interface\";\r\n          param.id = props.drawerId;\r\n        } else {\r\n          url = \"/api/add-interface\";\r\n        }\r\n\r\n        Axios.post(url, param).then((res) => {\r\n          if (res.data.success) {\r\n            props.onSaveSuccess();\r\n            message.success(\"保存成功\");\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      {/* 表单项 */}\r\n      <Col span={10} className=\"pr-10\">\r\n        <Form\r\n          layout={{\r\n            labelCol: { span: 0 },\r\n            wrapperCol: { span: 24 },\r\n          }}\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            name: \"\",\r\n            path: \"\",\r\n            method: \"GET\",\r\n            prefix: \"\",\r\n          }}\r\n        >\r\n          <h4>接口名称</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item\r\n              name=\"name\"\r\n              rules={[{ required: true, message: \"请输入接口名称!\" }]}\r\n            >\r\n              <Input autoComplete=\"off\" />\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.name}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <h4>请求方式</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item name=\"method\">\r\n              <Radio.Group buttonStyle=\"solid\">\r\n                <Radio value=\"GET\">GET</Radio>\r\n                <Radio value=\"POST\">POST</Radio>\r\n                <Radio value=\"PUT\">PUT</Radio>\r\n                <Radio value=\"DELETE\">DELETE</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.method}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <h4>工程前缀</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item name=\"prefix\">\r\n              <Select>\r\n                <Select.Option value=\"\">无接口前缀</Select.Option>\r\n                {prefixList.map((prefix) => {\r\n                  return (\r\n                    <Select.Option value={prefix.code} key={prefix.code}>\r\n                      {prefix.code}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.prefix}</li>\r\n            </ul>\r\n          )}\r\n\r\n          <h4>接口地址</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item\r\n              name=\"path\"\r\n              rules={[{ required: true, message: \"请输入接口地址!\" }]}\r\n            >\r\n              <Input autoComplete=\"off\" />\r\n            </Form.Item>\r\n          ) : (\r\n            <ul>\r\n              <li>{detailFormData.path}</li>\r\n            </ul>\r\n          )}\r\n        </Form>\r\n      </Col>\r\n      {/* 代码编辑与预览 */}\r\n      <Col span={14} className=\"pl-10\">\r\n        <h4>\r\n          <span className=\"mr-10\">响应数据</span>\r\n          {props.drawerType !== \"look\" ? (\r\n            <a href=\"#!\" style={{ color: \"#6c757d\" }}>\r\n              如何生成随机数据?\r\n            </a>\r\n          ) : null}\r\n        </h4>\r\n        {props.drawerType !== \"look\" ? (\r\n          <div className=\"clearfix\">\r\n            <Radio.Group\r\n              className=\"float-left\"\r\n              defaultValue=\"1\"\r\n              size=\"small\"\r\n              buttonStyle=\"solid\"\r\n              onChange={(e) =>\r\n                e.target.value === \"1\" ? setIsEdit(true) : setIsEdit(false)\r\n              }\r\n            >\r\n              <Radio.Button value=\"1\">编辑</Radio.Button>\r\n              <Radio.Button value=\"2\">预览1</Radio.Button>\r\n            </Radio.Group>\r\n            <div className=\"float-right\">\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                size=\"small\"\r\n                onChange={changeBaseData}\r\n              >\r\n                <Option value=\"\">响应数据快捷模板</Option>\r\n                {baseDataList.map((baseData, index) => {\r\n                  return (\r\n                    <Option value={index} title={baseData.name} key={index}>\r\n                      {baseData.name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"pt-10\">\r\n          <div\r\n            style={{\r\n              display: props.drawerType !== \"look\" && isEdit ? \"block\" : \"none\",\r\n              border: \"1px #eee solid\",\r\n            }}\r\n          >\r\n            <Ace ref={aceRef} height=\"400px\"></Ace>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display:\r\n                props.drawerType === \"look\" || !isEdit ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <TextArea\r\n              value={mockData}\r\n              style={{ height: \"400px\", backgroundColor: \"#f2f2f2\" }}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nHandleInterface = forwardRef(HandleInterface);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  message,\r\n  Button,\r\n  Modal,\r\n  Popconfirm,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n} from \"antd\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { Ace } from \"../base/ace\";\r\nimport JSON5 from \"json5\";\r\nimport { mock } from \"mockjs\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport function BaseData() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [handleId, setHandleId] = useState(null);\r\n  const aceRef = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      width: 70,\r\n      align: \"center\",\r\n      render: (text, record, index) => `${index + 1}`,\r\n    },\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"说明\",\r\n      dataIndex: \"remark\",\r\n      key: \"remark\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: 270,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Space>\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => editBaseData(record._id)}\r\n            type=\"primary\"\r\n            icon={<EditOutlined />}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"您确定要删除该模板数据吗?\"\r\n            onConfirm={() => {\r\n              deleteBaseData(record._id);\r\n            }}\r\n            okText=\"确定\"\r\n            cancelText=\"不删了\"\r\n          >\r\n            <Button size=\"small\" danger icon={<DeleteOutlined />}>\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!handleId || !visible) return;\r\n\r\n    Axios.post(\"/api/get-base-data-by-id\", { id: handleId }).then((res) => {\r\n      if (res.data.success) {\r\n        form.setFieldsValue({\r\n          name: res.data.data.name,\r\n          remark: res.data.data.remark,\r\n        });\r\n        aceRef.current.editor.setValue(JSON5.parse(res.data.data.aceData));\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [handleId, form, visible]);\r\n\r\n  const editBaseData = (id) => {\r\n    setHandleId(id);\r\n    setVisible(true);\r\n  };\r\n\r\n  const deleteBaseData = (id) => {\r\n    Axios.post(\"/api/delete-base-data\", { id }).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(\"删除成功\");\r\n        getList();\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getList = () => {\r\n    Axios.get(\"/api/get-base-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setDataSource(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  // 获取响应数据\r\n  const jsonValue = () => {\r\n    if (!aceRef.current.getValue()) {\r\n      message.error(\"请输入响应数据\");\r\n      return false;\r\n    }\r\n    try {\r\n      return JSON5.parse(aceRef.current.getValue());\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      message.error(\"json 解析出错\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        const jsonData = jsonValue();\r\n        if (!jsonData) return;\r\n        const param = {\r\n          name: values.name,\r\n          remark: values.remark,\r\n          data: mock(jsonData),\r\n          aceData: JSON5.stringify(aceRef.current.getValue()),\r\n        };\r\n        if (handleId) {\r\n          // 编辑\r\n          param.id = handleId;\r\n        }\r\n        setConfirmLoading(true);\r\n        Axios.post(\"/api/update-base-data\", param).then((res) => {\r\n          if (res.data.success) {\r\n            form.resetFields();\r\n            setConfirmLoading(false);\r\n            aceRef.current.editor.setValue(\"\");\r\n            message.success(\"保存成功\");\r\n            getList();\r\n            setVisible(false);\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      })\r\n      .catch((reason) => console.log(reason));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"pb-10\">\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setVisible(true);\r\n            setHandleId(null);\r\n          }}\r\n        >\r\n          新增\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        rowKey={(record) => record._id}\r\n        pagination={false}\r\n      />\r\n      <Modal\r\n        title=\"新增响应数据\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={() => setVisible(false)}\r\n        centered={true}\r\n        confirmLoading={confirmLoading}\r\n        forceRender={true}\r\n        width={900}\r\n      >\r\n        <Row>\r\n          <Col span={8} className=\"pr-10\">\r\n            <Form\r\n              form={form}\r\n              name=\"basic\"\r\n              layout=\"vertical\"\r\n              initialValues={{\r\n                name: \"\",\r\n                remark: \"\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                label=\"名称\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"请输入名称\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"说明\" name=\"remark\">\r\n                <TextArea autoComplete=\"off\" />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col span={16}>\r\n            <h4>响应数据</h4>\r\n            <Ace ref={aceRef} height=\"340px\"></Ace>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Table, message, Button, Modal, Form, Input, Popconfirm } from \"antd\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nexport function Prefix() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const deletePrefix = (id) => {\r\n    Axios.post(\"/api/delete-prefix\", { id: id }).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(\"删除成功\");\r\n        getList();\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      width: 70,\r\n      align: \"center\",\r\n      render: (text, record, index) => `${index + 1}`,\r\n    },\r\n    {\r\n      title: \"前缀\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n    },\r\n    {\r\n      title: \"说明\",\r\n      dataIndex: \"remark\",\r\n      key: \"remark\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: 270,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Popconfirm\r\n          title=\"您确定要删除该前缀吗?\"\r\n          onConfirm={() => {\r\n            deletePrefix(record._id);\r\n          }}\r\n          okText=\"确定\"\r\n          cancelText=\"不删了\"\r\n        >\r\n          <Button size=\"small\" danger icon={<DeleteOutlined />}>\r\n            删除\r\n          </Button>\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const getList = () => {\r\n    Axios.get(\"/api/get-prefix-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setDataSource(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  const handleOk = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        const param = {\r\n          code: values.code.startsWith(\"/\") ? values.code : `/${values.code}`,\r\n          remark: values.remark,\r\n        };\r\n        setConfirmLoading(true);\r\n        Axios.post(\"/api/add-prefix\", param).then((res) => {\r\n          if (res.data.success) {\r\n            setConfirmLoading(false);\r\n            form.resetFields();\r\n            setVisible(false);\r\n            getList();\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      })\r\n      .catch((reason) => console.log(reason));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pb-10\">\r\n        <Button type=\"primary\" onClick={() => setVisible(true)}>\r\n          新增\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        rowKey={(record) => record._id}\r\n        pagination={false}\r\n      />\r\n      <Modal\r\n        title=\"新增前缀\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={() => setVisible(false)}\r\n        centered={true}\r\n        confirmLoading={confirmLoading}\r\n      >\r\n        <Form\r\n          form={form}\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            code: \"\",\r\n            delay: 200,\r\n          }}\r\n        >\r\n          <Form.Item\r\n            label=\"前缀\"\r\n            name=\"code\"\r\n            rules={[{ required: true, message: \"请输入接口前缀\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"说明\" name=\"remark\">\r\n            <Input autoComplete=\"off\" />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Radio, message } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 3 },\r\n  wrapperCol: { span: 8 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 3, span: 8 },\r\n};\r\nexport function Project() {\r\n  const [form] = Form.useForm();\r\n\r\n  const [configId, setConfigId] = useState(null);\r\n  useEffect(() => {\r\n    Axios.get(\"/api/get-config\").then((res) => {\r\n      if (res.data.success) {\r\n        if (!res.data.data.target) return;\r\n        form.setFieldsValue({\r\n          target: res.data.data.target,\r\n          delay: res.data.data.delay,\r\n          changeOrigin: res.data.data.changeOrigin,\r\n        });\r\n        setConfigId(res.data.data._id);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setConfigId, form]);\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    const param = {\r\n      target: values.target,\r\n      delay: values.delay,\r\n      id: configId,\r\n      changeOrigin: values.changeOrigin,\r\n    };\r\n    Axios.post(\"/api/update-config\", param).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(\"保存成功\");\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-20\">\r\n      <Form\r\n        form={form}\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          changeOrigin: false,\r\n          delay: 200,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"代理地址\"\r\n          name=\"target\"\r\n          rules={[{ required: true, message: \"请输入项目代理地址\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"响应延时\"\r\n          name=\"delay\"\r\n          rules={[{ required: true, message: \"请输入Mock接口响应延时!\" }]}\r\n        >\r\n          <Input autoComplete=\"off\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"变更来源\" name=\"changeOrigin\">\r\n          <Radio.Group>\r\n            <Radio value={true}>变更</Radio>\r\n            <Radio value={false}>不变更</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            保存\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import { Home } from \"./pages/home\";\r\nimport { BaseData } from \"./pages/base-data\";\r\nimport { Prefix } from \"./pages/prefix\";\r\nimport { Project } from \"./pages/project\";\r\nimport { Document } from \"./pages/document\";\r\n\r\nexport const routes = [\r\n  {\r\n    path: \"/\",\r\n    component: Home,\r\n    exact: true,\r\n    title: \"接口列表\"\r\n  },\r\n  {\r\n    path: \"/base-data\",\r\n    component: BaseData,\r\n    title: \"响应数据维护\"\r\n    // routes: [\r\n    //   {\r\n    //     path: \"/tacos/bus\",\r\n    //     component: Bus\r\n    //   }\r\n    // ]\r\n  },\r\n  {\r\n    path: \"/prefix\",\r\n    component: Prefix,\r\n    title: \"接口前缀维护\"\r\n  },\r\n  {\r\n    path: \"/project\",\r\n    component: Project,\r\n    title: \"项目配置维护\"\r\n  },\r\n  {\r\n    path: \"/document\",\r\n    component: Document,\r\n    title: \"文档说明\"\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nexport function Document() {\r\n  return (\r\n    <div>Document</div>\r\n  )\r\n}","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport { routes } from \"../router\";\r\n\r\nfunction Header(props) {\r\n  let count = '1';\r\n  for (let i = 0; i < routes.length; i++) {\r\n    if (routes[i].path === props.history.location.pathname) {\r\n      count = `${i + 1}`\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div style={{ float: 'left', fontSize: '20px', marginRight: '20px', height: '64px' }} >SNAKE-API <small>mini</small></div>\r\n      <Menu mode=\"horizontal\" defaultSelectedKeys={[count]}>\r\n        <Menu.Item key=\"1\">\r\n          <Link to=\"/\">接口列表</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <Link to=\"/base-data\">响应数据维护</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\">\r\n          <Link to=\"/prefix\">接口前缀维护</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"4\">\r\n          <Link to=\"/project\">项目配置维护</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"5\">\r\n          <Link to=\"/document\">文档说明</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport { Breadcrumb } from \"antd\";\r\n\r\nexport default function Content(props) {\r\n  const warp = {\r\n    padding: \"66px 20px 0 20px\",\r\n    minHeight: \"calc(100vh - 42px)\",\r\n  };\r\n  return (\r\n    <div style={warp}>\r\n      <Breadcrumb style={{ padding: \"10px 0\" }}>\r\n        <Breadcrumb.Item>接口列表</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SnakeHeader from \"./base/header\";\r\nimport SnakeContent from \"./base/content\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { routes } from \"./router\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Header\r\n          className=\"header\"\r\n          style={{\r\n            position: \"fixed\",\r\n            zIndex: 1,\r\n            width: \"100%\",\r\n            padding: \"0 20px\",\r\n          }}\r\n        >\r\n          <SnakeHeader />\r\n        </Header>\r\n        <Content>\r\n          <SnakeContent>\r\n            <Switch>\r\n              {routes.map((route, i) => (\r\n                <RouteWithSubRoutes key={route.path} {...route} />\r\n              ))}\r\n            </Switch>\r\n          </SnakeContent>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\", padding: \"10px\" }}>\r\n          技术支持：seebin | 钉钉交流群:21958681\r\n        </Footer>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction RouteWithSubRoutes(route) {\r\n  document.title = route.title;\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props) => (\r\n        // pass the sub-routes down to keep nesting\r\n        <route.component {...props} routes={route.routes} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zhCN from \"antd/es/locale/zh_CN\";\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <App />\r\n  </ConfigProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}