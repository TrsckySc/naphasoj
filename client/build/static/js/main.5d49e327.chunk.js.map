{"version":3,"sources":["utils/load-script.js","base/ace.js","pages/home.js","utils/copy.js","pages/base-data.js","pages/prefix.js","pages/project.js","router.js","pages/document.js","base/header.js","base/content.js","App.js","serviceWorker.js","index.js"],"names":["load","src","isAsync","Promise","resolve","reject","script","document","createElement","async","onload","onerror","body","appendChild","Ace","props","srcList","emp","forEach","a","LoadScript","then","setState","isLoadAce","catch","reason","console","error","state","React","forwardRef","render","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","this","window","ace","owner","editor","edit","setTheme","JavaScriptMode","require","Mode","session","setMode","tangideCompleter","identifierRegexps","getCompletions","pos","prefix","callback","length","autoCompleteData","name","value","caption","meta","type","score","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","addCompleter","commands","addCommand","bindKey","win","mac","exec","ele","getElementById","isFullScreen","mozIsFullScreen","webkitIsFullScreen","launchFullscreen","readOnly","getSession","setTabSize","on","e","getValue","initAce","id","style","width","height","position","lineHeight","fontSize","border","Component","Option","TextArea","Search","useForm","form","useState","forceUpdate","useEffect","updateConfig","Axios","post","projectConfig","_id","mock","res","data","success","message","updateProjectConfig","errorMsg","className","layout","onFinish","values","onSearch","Item","placeholder","shouldUpdate","htmlType","color","onClick","confirm","title","content","icon","ExclamationCircleOutlined","okType","onOk","display","borderRadius","marginRight","backgroundColor","HandleBtn","float","openDrawer","PlusCircleOutlined","ImportOutlined","danger","deleteAllInterface","DeleteOutlined","PageTable","mockStatusList","label","columns","align","text","record","index","dataIndex","key","method","toUpperCase","CopyOutlined","currentFocus","activeElement","input","opacity","scrollY","focus","setSelectionRange","execCommand","removeChild","scrollTo","info","copyText","defaultValue","isOpen","onChange","onHandleTableRow","map","mockStatus","isLock","size","LockOutlined","UnlockOutlined","EyeOutlined","EditOutlined","onConfirm","okText","cancelText","dataSource","rowKey","pagination","HandleInterface","ref","useImperativeHandle","aceRef","useRef","isEdit","setIsEdit","mockData","setMockData","detailFormData","setDetailFormData","prefixList","setPrefixList","baseDataList","setBaseDataList","drawerType","drawerId","path","setFieldsValue","current","setValue","JSON5","parse","sourceData","JSON","stringify","get","validateFields","jsonData","log","jsonValue","url","param","onSaveSuccess","span","labelCol","wrapperCol","initialValues","rules","required","autoComplete","Group","buttonStyle","code","href","target","Button","baseData","tailLayout","offset","routes","component","filter","setFilter","tableList","setTableList","drawer","setDrawer","setDrawerType","setDrawerId","setProjectConfig","getListData","page","rows","list","handleInterfaceRef","useCallback","warning","keyboard","centered","maskClosable","history","push","handleTableRow","table","Object","assign","initSearch","placement","destroyOnClose","forceRender","onClose","visible","footer","textAlign","setTimeout","exact","setDataSource","setVisible","confirmLoading","setConfirmLoading","handleId","setHandleId","editBaseData","deleteBaseData","remark","aceData","getList","resetFields","onCancel","startsWith","delay","configId","setConfigId","changeOrigin","onFinishFailed","errorInfo","withRouter","count","i","location","pathname","mode","defaultSelectedKeys","to","rel","alt","Content","padding","minHeight","children","Header","Footer","RouteWithSubRoutes","route","App","zIndex","Boolean","hostname","match","ReactDOM","locale","zhCN","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d49e327.chunk.js","sourcesContent":["/**\r\n * 批量异步加载script脚本\r\n * @param {*} srcList src地址集合\r\n */\r\nexport function AsyncLoadScript(srcList) {\r\n  let scPromise = [];\r\n  srcList.forEach((src) => {\r\n    scPromise.push(load(src, true));\r\n  });\r\n  return Promise.all(scPromise);\r\n}\r\n\r\n/**\r\n * 批量同步加载script脚本\r\n * @param {*} srcList \r\n */\r\nexport function LoadScript(srcList) {\r\n  let emp = true;\r\n  srcList.forEach(async (src) => {\r\n    try {\r\n      await load(src, false);\r\n    } catch (reason) {\r\n      emp = false;\r\n    }\r\n  });\r\n  return new Promise((resolve, reject) => {\r\n    if (emp) {\r\n      resolve();\r\n    } else {\r\n      reject();\r\n    }\r\n  });\r\n}\r\nfunction load(src, isAsync) {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n    script.async = isAsync;\r\n    script.onload = function () {\r\n      resolve();\r\n    };\r\n    script.onerror = function () {\r\n      reject();\r\n    };\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { LoadScript } from \"../utils/load-script\";\r\n\r\nexport class Ace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    LoadScript([\r\n      \"./lib/ace-1.4.4/src/ace.js\",\r\n      \"./lib/ace-1.4.4/src/theme-chrome.js\",\r\n      \"./lib/ace-1.4.4/src/mode-json.js\",\r\n      \"./lib/ace-1.4.4/src/snippets/json.js\",\r\n      \"./lib/ace-1.4.4/src/ext-language_tools.js\",\r\n    ])\r\n      .then(() => {\r\n        this.setState({\r\n          isLoadAce: true,\r\n        });\r\n      })\r\n      .catch((reason) => {\r\n        console.error(\">>>>>>\", reason);\r\n      });\r\n    this.state = {\r\n      isLoadAce: false,\r\n    };\r\n    React.forwardRef(this.render);\r\n  }\r\n  // 启动全屏\r\n  launchFullscreen(element) {\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  // 退出全屏\r\n  exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n\r\n  initAce() {\r\n    if (!this.state.isLoadAce || !window.ace) return;\r\n    const owner = this;\r\n    const editor = (this.editor = window.ace.edit(\"interface-data\"));\r\n    editor.setTheme(\"ace/theme/chrome\"); //设置主题\r\n    var JavaScriptMode = window.ace.require(\"ace/mode/json\").Mode;\r\n    editor.session.setMode(new JavaScriptMode()); //设置程序语言模式\r\n\r\n    // 设置自动补全\r\n    var tangideCompleter = {\r\n      identifierRegexps: [/[a-zA-Z_0-9@\\-\\u00A2-\\uFFFF]/],\r\n      getCompletions: function (editor, session, pos, prefix, callback) {\r\n        if (prefix.length === 0) {\r\n          return callback(null, []);\r\n        } else {\r\n          return callback(null, autoCompleteData);\r\n        }\r\n      },\r\n    };\r\n    // 自定义补全列表\r\n    var autoCompleteData = [\r\n      {\r\n        name: \"mock string\",\r\n        value: \"@string\",\r\n        caption: \"@string\",\r\n        meta: \"Mock-String\",\r\n        type: \"local\",\r\n        score: 1000,\r\n      },\r\n      {\r\n        name: \"mock number\",\r\n        value: \"@number\",\r\n        caption: \"@number\",\r\n        meta: \"Mock-Number\",\r\n        score: 1000,\r\n      },\r\n      {\r\n        name: \"mock integer\",\r\n        value: \"@integer\",\r\n        caption: \"@integer\",\r\n        meta: \"Mock-Integer\",\r\n        score: 1000,\r\n      },\r\n      // {\r\n      //   name: \"mock image\",\r\n      //   value: Random.image(\"200x100\"),\r\n      //   caption: \"@image\",\r\n      //   meta: \"Mock-Image\",\r\n      //   score: 1000,\r\n      // },\r\n    ];\r\n    editor.setOptions({\r\n      enableBasicAutocompletion: true,\r\n      enableSnippets: true,\r\n      enableLiveAutocompletion: true,\r\n    });\r\n    var langTools = window.ace.require(\"ace/ext/language_tools\");\r\n    langTools.addCompleter(tangideCompleter);\r\n\r\n    // 设置全屏\r\n    editor.commands.addCommand({\r\n      name: \"fullscreen\",\r\n      bindKey: { win: \"Ctrl-Enter\", mac: \"Command-Enter\" },\r\n      exec: function (editor) {\r\n        var ele = document.getElementById(\"interface-data\");\r\n        if (\r\n          document.isFullScreen ||\r\n          document.mozIsFullScreen ||\r\n          document.webkitIsFullScreen\r\n        ) {\r\n          owner.exitFullscreen();\r\n        } else {\r\n          owner.launchFullscreen(ele);\r\n        }\r\n      },\r\n      readOnly: true, // 只读下设置可以全屏展示\r\n    });\r\n\r\n    // editor.getSession().setUseWrapMode(true);//设置折叠 默认折叠的\r\n    editor.getSession().setTabSize(2); // 设置制表符大小\r\n    // 改变事件\r\n    editor.getSession().on(\"change\", function (e, a) {});\r\n  }\r\n\r\n  getValue() {\r\n    return this.editor.getValue();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.initAce();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"interface-data\"\r\n        style={{\r\n          width: \"100%\",\r\n          height: this.props.height || \"300px\",\r\n          position: \"relative\",\r\n          lineHeight: \"1.5\",\r\n          fontSize: \"14px\",\r\n          border: \"1px #eee solid\",\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Tag,\r\n  Select,\r\n  Space,\r\n  message,\r\n  Popconfirm,\r\n  Drawer,\r\n  Row,\r\n  Col,\r\n  Radio,\r\n  Modal,\r\n} from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  ImportOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  EyeOutlined,\r\n  LockOutlined,\r\n  UnlockOutlined,\r\n  CopyOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport JSON5 from \"json5\";\r\nimport { Ace } from \"../base/ace\";\r\nimport { mock } from \"mockjs\";\r\nimport { copyText } from \"../utils/copy\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nexport function Home(props) {\r\n  const [filter, setFilter] = useState({});\r\n\r\n  const [tableList, setTableList] = useState([]);\r\n\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  const [drawerType, setDrawerType] = useState(null);\r\n\r\n  const [drawerId, setDrawerId] = useState(null);\r\n\r\n  const [projectConfig, setProjectConfig] = useState({});\r\n\r\n  const getListData = (name, url, page) => {\r\n    const param = {\r\n      name,\r\n      url,\r\n      page: 1,\r\n      rows: 20,\r\n    };\r\n    Axios.post(\"/api/get-interface-list\", param).then((res) => {\r\n      if (res.data.success) {\r\n        setTableList(res.data.data.list);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInterfaceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    getListData(filter.name, filter.url, 1);\r\n  }, [filter]);\r\n\r\n  const updateProjectConfig = useCallback(() => {\r\n    Axios.get(\"/api/get-config\").then((res) => {\r\n      if (res.data.success) {\r\n        setProjectConfig(res.data.data);\r\n        if (!res.data.data.target) {\r\n          // 跳转项目配置页面\r\n          Modal.warning({\r\n            title: \"警告\",\r\n            keyboard: false,\r\n            centered: true,\r\n            maskClosable: false,\r\n            okText: \"去设置\",\r\n            content: (\r\n              <div>\r\n                <p>检测到你还没有维护代理地址, 请先维护项目代理地址</p>\r\n              </div>\r\n            ),\r\n            onOk() {\r\n              props.history.push(\"/project\");\r\n            },\r\n          });\r\n        }\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setProjectConfig, props.history])\r\n\r\n  useEffect(() => {\r\n    updateProjectConfig();\r\n  }, [updateProjectConfig]);\r\n\r\n  function handleTableRow(type, value, id) {\r\n    if (type === \"changeMock\") {\r\n      // 切换mock状态\r\n      Axios.post(\"/api/change-interface-mock-status\", {\r\n        id,\r\n        isOpen: value === \"open\",\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(value === \"open\" ? \"Mock状态开启成功,你可以使用Mock数据了\" : \"Mock状态已停用,你可以使用真实的接口数据了\");\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isOpen: value === \"open\",\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"changeLock\") {\r\n      // 切换锁\r\n      Axios.post(\"/api/change-interface-lock-status\", {\r\n        id,\r\n        isLock: value,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\r\n            value ? \"接口已锁，将无法编辑与删除操作\" : \"接口已解锁\"\r\n          );\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isLock: value,\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"delete\") {\r\n      // 删除接口\r\n      Axios.post(\"/api/delete-interface\", {\r\n        id,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\"删除成功\");\r\n          // 重新查询数据\r\n          getListData(filter.name, filter.url, 1);\r\n        } else {\r\n        }\r\n      });\r\n    } else if (type === \"edit\") {\r\n      // 编辑接口\r\n      setDrawerType(\"edit\");\r\n      setDrawerId(id);\r\n      setDrawer(true);\r\n    } else if (type === \"look\") {\r\n      // 查看接口\r\n      setDrawerType(\"look\");\r\n      setDrawerId(id);\r\n      setDrawer(true);\r\n    } else if (type === \"add\") {\r\n      // 新增接口\r\n      setDrawerType(\"add\");\r\n      setDrawerId(null);\r\n      setDrawer(true);\r\n    }\r\n  }\r\n\r\n  function saveSuccess() {\r\n    setDrawer(false);\r\n    setTimeout(() => {\r\n      getListData(filter.name, filter.url, 1);\r\n    }, 320);\r\n  }\r\n\r\n  const deleteAllInterface = () => {\r\n    Modal.confirm({\r\n      title: \"您确认要删除所有接口？\",\r\n      content: \"已经被锁定的接口不会被删除\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      okType: \"danger\",\r\n      okText: \"删除\",\r\n      onOk() {\r\n        Axios.get(\"/api/delete-all-interface\").then((res) => {\r\n          if (res.data.success) {\r\n            message.success(\"已成功清空所有未被锁定的接口\");\r\n            getListData(filter.name, filter.url, 1);\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        onSearch={(values) => {\r\n          setFilter(values);\r\n        }}\r\n        projectConfig={projectConfig}\r\n        updateProjectConfig={updateProjectConfig}\r\n      ></Search>\r\n      <HandleBtn\r\n        initSearch={() => {\r\n          getListData();\r\n        }}\r\n        openDrawer={() => {\r\n          handleTableRow(\"add\", null, null);\r\n        }}\r\n        deleteAllInterface={deleteAllInterface}\r\n      ></HandleBtn>\r\n      <PageTable\r\n        dataSource={tableList}\r\n        onHandleTableRow={handleTableRow}\r\n      ></PageTable>\r\n\r\n      <Drawer\r\n        title={\r\n          drawerType === \"add\"\r\n            ? \"新增接口\"\r\n            : drawerType === \"edit\"\r\n              ? \"编辑接口\"\r\n              : \"查看接口\"\r\n        }\r\n        placement=\"left\"\r\n        destroyOnClose={true}\r\n        forceRender={true}\r\n        onClose={() => setDrawer(false)}\r\n        visible={drawer}\r\n        width=\"80%\"\r\n        footer={\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button onClick={() => setDrawer(false)} style={{ marginRight: 8 }}>\r\n              关闭\r\n            </Button>\r\n            {drawerType !== \"look\" ? (\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  handleInterfaceRef.current.onFinish();\r\n                }}\r\n              >\r\n                保存\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        }\r\n      >\r\n        <HandleInterface\r\n          drawerType={drawerType}\r\n          drawerId={drawerId}\r\n          ref={handleInterfaceRef}\r\n          onSaveSuccess={saveSuccess}\r\n        ></HandleInterface>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState();\r\n\r\n  // To disable submit button at the beginning.\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    props.onSearch(values);\r\n  };\r\n\r\n  const updateConfig = () => {\r\n    Axios.post(\"/api/update-config-mock\", {\r\n      id: props.projectConfig._id,\r\n      mock: !props.projectConfig.mock\r\n    }).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(!props.projectConfig.mock ? '已启用项目Mock功能' : \"已停用项目Mock功能\");\r\n        props.updateProjectConfig()\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }\r\n\r\n  const changeMock = () => {\r\n    if (props.projectConfig.mock) {\r\n      Modal.confirm({\r\n        title: \"您确认要停用Mock功能吗？\",\r\n        content: \"设置后所有Mock接口将不可用, 服务只保留反向代理功能\",\r\n        icon: <ExclamationCircleOutlined />,\r\n        okType: \"danger\",\r\n        onOk() {\r\n          updateConfig()\r\n        },\r\n      });\r\n    } else {\r\n      updateConfig()\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"clearfix\">\r\n      <Form\r\n        form={form}\r\n        name=\"horizontal_login\"\r\n        layout=\"inline\"\r\n        onFinish={onFinish}\r\n        className=\"float-left\"\r\n      >\r\n        <Form.Item name=\"name\">\r\n          <Input placeholder=\"请输入接口名称\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"url\">\r\n          <Input placeholder=\"请输入接口地址\" />\r\n        </Form.Item>\r\n        <Form.Item shouldUpdate={true}>\r\n          {() => (\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              查 询\r\n            </Button>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n      <div className=\"float-right cursor-pointer\" style={{ color: props.projectConfig.mock ? '#28a745' : '#dc3545' }} onClick={() => changeMock()}>\r\n        <span style={{\r\n          display: 'inline-block',\r\n          width: '8px',\r\n          height: '8px',\r\n          borderRadius: '4px',\r\n          marginRight: '5px',\r\n          backgroundColor: props.projectConfig.mock ? '#28a745' : '#dc3545'\r\n        }}></span>\r\n        {props.projectConfig.mock ? (\r\n          <span>Mock 启用中...</span>\r\n        ) : (\r\n            <span>Mock 停用中...</span>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction HandleBtn(props) {\r\n  return (\r\n    <div className=\"pt-20 pb-20 clearfix\">\r\n      <div style={{ float: \"left\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => props.openDrawer()}\r\n          icon={<PlusCircleOutlined />}\r\n        >\r\n          新建接口\r\n        </Button>\r\n        <Button type=\"dashed\" icon={<ImportOutlined />} className=\"ml-20\">\r\n          导入Swagger 接口\r\n        </Button>\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <Button\r\n          danger\r\n          onClick={() => props.deleteAllInterface()}\r\n          icon={<DeleteOutlined />}\r\n        >\r\n          清空当前所有接口\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PageTable(props) {\r\n  const mockStatusList = [\r\n    {\r\n      value: \"open\",\r\n      label: \"启用中\",\r\n    },\r\n    {\r\n      value: \"close\",\r\n      label: \"停用中\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      width: 70,\r\n      align: \"center\",\r\n      render: (text, record, index) => `${index + 1}`,\r\n    },\r\n    {\r\n      title: \"接口名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"接口类型\",\r\n      dataIndex: \"method\",\r\n      key: \"method\",\r\n      align: \"center\",\r\n      render: (method) => (\r\n        <Tag color={method === \"POST\" ? \"#52c41a\" : \"#1890ff\"}>\r\n          {method.toUpperCase()}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"接口前缀\",\r\n      dataIndex: \"prefix\",\r\n      key: \"prefix\",\r\n    },\r\n    {\r\n      title: \"接口地址\",\r\n      dataIndex: \"path\",\r\n      key: \"path\",\r\n      render: (text) => (\r\n        <>\r\n          <CopyOutlined onClick={() => copyText(text)} className=\"pr-10\" />\r\n          <span>{text}</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mock启用状态\",\r\n      dataIndex: \"isOpen\",\r\n      key: \"isOpen\",\r\n      width: 150,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Select\r\n          defaultValue={record.isOpen ? \"open\" : \"close\"}\r\n          style={{\r\n            width: 100,\r\n            color: record.isOpen ? \"#52c41a\" : \"#ff4d4f\",\r\n          }}\r\n          onChange={(value) =>\r\n            props.onHandleTableRow(\"changeMock\", value, record._id)\r\n          }\r\n        >\r\n          {mockStatusList.map((mockStatus) => {\r\n            return (\r\n              <Option\r\n                value={mockStatus.value}\r\n                key={mockStatus.value}\r\n                id={record._id}\r\n              >\r\n                {mockStatus.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      ),\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: 270,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Space>\r\n          {record.isLock ? (\r\n            <>\r\n              <Button\r\n                type=\"link\"\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  props.onHandleTableRow(\"changeLock\", false, record._id)\r\n                }\r\n                icon={<LockOutlined />}\r\n              />\r\n            </>\r\n          ) : (\r\n              <Button\r\n                type=\"link\"\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  props.onHandleTableRow(\"changeLock\", true, record._id)\r\n                }\r\n                icon={<UnlockOutlined />}\r\n              />\r\n            )}\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => props.onHandleTableRow(\"look\", null, record._id)}\r\n            type=\"primary\"\r\n            icon={<EyeOutlined />}\r\n          >\r\n            查看\r\n          </Button>\r\n          {!record.isLock ? (\r\n            <>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => props.onHandleTableRow(\"edit\", null, record._id)}\r\n                icon={<EditOutlined />}\r\n              >\r\n                编辑\r\n              </Button>\r\n              <Popconfirm\r\n                title=\"您确定要删除该接口吗?\"\r\n                onConfirm={() => {\r\n                  props.onHandleTableRow(\"delete\", null, record._id);\r\n                }}\r\n                okText=\"确定\"\r\n                cancelText=\"不删了\"\r\n              >\r\n                <Button size=\"small\" danger icon={<DeleteOutlined />}>\r\n                  删除\r\n                </Button>\r\n              </Popconfirm>\r\n            </>\r\n          ) : null}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={props.dataSource}\r\n      rowKey={(record) => record._id}\r\n      pagination={false}\r\n    />\r\n  );\r\n}\r\n\r\nlet HandleInterface = function (props, ref) {\r\n  useImperativeHandle(ref, () => ({\r\n    onFinish: () => {\r\n      onFinish();\r\n    },\r\n  }));\r\n\r\n  const aceRef = useRef(null);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [isEdit, setIsEdit] = useState(true);\r\n  const [mockData, setMockData] = useState(null);\r\n  const [detailFormData, setDetailFormData] = useState({});\r\n  const [prefixList, setPrefixList] = useState([]);\r\n  const [baseDataList, setBaseDataList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 非新增接口查询详情\r\n    if (props.drawerType && props.drawerType !== \"add\") {\r\n      Axios.post(\"/api/get-interface-detail\", { id: props.drawerId }).then(\r\n        (res) => {\r\n          if (res.data.success) {\r\n            const data = {\r\n              name: res.data.data.name,\r\n              path: res.data.data.path,\r\n              method: res.data.data.method,\r\n              prefix: res.data.data.prefix,\r\n            };\r\n            form.setFieldsValue(data);\r\n            setDetailFormData(data);\r\n            // 回显json5数据\r\n            aceRef.current.editor.setValue(\r\n              JSON5.parse(res.data.data.sourceData)\r\n            );\r\n            setMockData(JSON.stringify(mock(res.data.data.data), null, 4));\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [props.drawerType, props.drawerId, form]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"/api/get-prefix-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setPrefixList(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n    Axios.get(\"/api/get-base-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setBaseDataList(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [setPrefixList, setBaseDataList]);\r\n\r\n  const changeBaseData = (index) => {\r\n    aceRef.current.editor.setValue(\r\n      index === '' ? '' : JSON.stringify(baseDataList[index].data, null, 2)\r\n    );\r\n  };\r\n\r\n  // 获取响应数据\r\n  const jsonValue = () => {\r\n    if (!aceRef.current.getValue()) {\r\n      message.error(\"请输入响应数据\");\r\n      return false;\r\n    }\r\n    try {\r\n      return JSON5.parse(aceRef.current.getValue());\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      message.error(\"json 解析出错\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onFinish = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        const jsonData = jsonValue();\r\n        if (!jsonData) return;\r\n\r\n        const param = {\r\n          name: values.name,\r\n          path: values.path,\r\n          data: mock(jsonData),\r\n          sourceData: JSON5.stringify(aceRef.current.getValue()),\r\n          method: values.method,\r\n          prefix: values.prefix,\r\n          isOpen: true,\r\n        };\r\n\r\n        let url;\r\n\r\n        if (props.drawerId) {\r\n          url = \"/api/update-interface\";\r\n          param.id = props.drawerId;\r\n        } else {\r\n          url = \"/api/add-interface\";\r\n        }\r\n\r\n        Axios.post(url, param).then((res) => {\r\n          if (res.data.success) {\r\n            props.onSaveSuccess();\r\n            message.success(\"保存成功\");\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      {/* 表单项 */}\r\n      <Col span={10} className=\"pr-10\">\r\n        <Form\r\n          layout={{\r\n            labelCol: { span: 0 },\r\n            wrapperCol: { span: 24 },\r\n          }}\r\n          form={form}\r\n          name=\"basic\"\r\n          initialValues={{\r\n            name: \"\",\r\n            path: \"\",\r\n            method: \"GET\",\r\n            prefix: \"\",\r\n          }}\r\n        >\r\n          <h4>接口名称</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item\r\n              name=\"name\"\r\n              rules={[{ required: true, message: \"请输入接口名称!\" }]}\r\n            >\r\n              <Input autoComplete=\"off\" />\r\n            </Form.Item>\r\n          ) : (\r\n              <ul>\r\n                <li>{detailFormData.name}</li>\r\n              </ul>\r\n            )}\r\n\r\n          <h4>请求方式</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item name=\"method\">\r\n              <Radio.Group buttonStyle=\"solid\">\r\n                <Radio value=\"GET\">GET</Radio>\r\n                <Radio value=\"POST\">POST</Radio>\r\n                <Radio value=\"PUT\">PUT</Radio>\r\n                <Radio value=\"DELETE\">DELETE</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          ) : (\r\n              <ul>\r\n                <li>{detailFormData.method}</li>\r\n              </ul>\r\n            )}\r\n\r\n          <h4>工程前缀</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item name=\"prefix\">\r\n              <Select>\r\n                <Select.Option value=\"\">无接口前缀</Select.Option>\r\n                {prefixList.map((prefix) => {\r\n                  return (\r\n                    <Select.Option value={prefix.code} key={prefix.code}>\r\n                      {prefix.code}\r\n                    </Select.Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n          ) : (\r\n              <ul>\r\n                <li>{detailFormData.prefix}</li>\r\n              </ul>\r\n            )}\r\n\r\n          <h4>接口地址</h4>\r\n          {props.drawerType !== \"look\" ? (\r\n            <Form.Item\r\n              name=\"path\"\r\n              rules={[{ required: true, message: \"请输入接口地址!\" }]}\r\n            >\r\n              <Input autoComplete=\"off\" />\r\n            </Form.Item>\r\n          ) : (\r\n              <ul>\r\n                <li>{detailFormData.path}</li>\r\n              </ul>\r\n            )}\r\n        </Form>\r\n      </Col>\r\n      {/* 代码编辑与预览 */}\r\n      <Col span={14} className=\"pl-10\">\r\n        <h4>\r\n          <span className=\"mr-10\">响应数据</span>\r\n          {props.drawerType !== \"look\" ? (\r\n            <a href=\"#!\" style={{ color: \"#6c757d\" }}>\r\n              如何生成随机数据?\r\n            </a>\r\n          ) : null}\r\n        </h4>\r\n        {props.drawerType !== \"look\" ? (\r\n          <div className=\"clearfix\">\r\n            <Radio.Group\r\n              className=\"float-left\"\r\n              defaultValue=\"1\"\r\n              size=\"small\"\r\n              buttonStyle=\"solid\"\r\n              onChange={(e) =>\r\n                e.target.value === \"1\" ? setIsEdit(true) : setIsEdit(false)\r\n              }\r\n            >\r\n              <Radio.Button value=\"1\">编辑</Radio.Button>\r\n              <Radio.Button value=\"2\">预览</Radio.Button>\r\n            </Radio.Group>\r\n            <div className=\"float-right\">\r\n              <span className=\"mr-10\">快捷数据模版:</span>\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                size=\"small\"\r\n                onChange={changeBaseData}\r\n              >\r\n                <Option value=\"\">不使用响应数据模版</Option>\r\n                {baseDataList.map((baseData, index) => {\r\n                  return (\r\n                    <Option value={index} title={baseData.name} key={index}>\r\n                      {baseData.name}\r\n                    </Option>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"pt-10\">\r\n          <div\r\n            style={{\r\n              display: props.drawerType !== \"look\" && isEdit ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <Ace ref={aceRef} height=\"400px\"></Ace>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display:\r\n                props.drawerType === \"look\" || !isEdit ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <TextArea\r\n              value={mockData}\r\n              style={{ height: \"400px\", backgroundColor: \"#f2f2f2\" }}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nHandleInterface = forwardRef(HandleInterface);\r\n","import { message } from \"antd\";\r\n\r\nexport function copyText(text) {\r\n  var currentFocus = document.activeElement; // 保存当前活动节点\r\n\r\n  let input = document.createElement(\"input\"); // 创建一个input标签\r\n  document.body.appendChild(input); // 把标签添加给body\r\n  input.style.opacity = 0; //设置input标签设置为透明(不可见)\r\n  input.value = text; // 把需要复制的值放到input上\r\n\r\n  // 记录当前滚动位置, 因为添加节点并选中的时候回影响页面滚动\r\n  let scrollY = window.scrollY;\r\n\r\n  input.focus(); // input节点获取焦点\r\n  input.setSelectionRange(0, input.value.length); // 选中input框中的所有文字\r\n\r\n  document.execCommand(\"copy\", true); // 复制文字并获取结果\r\n\r\n  currentFocus.focus(); // 之前活动节点获得焦点\r\n  document.body.removeChild(input); // 删除添加的input节点\r\n\r\n  // 页面滚动到之前位置\r\n  window.scrollTo(0, scrollY);\r\n\r\n  message.info(\"已复制到粘贴板\");\r\n}","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  Table,\r\n  message,\r\n  Button,\r\n  Modal,\r\n  Popconfirm,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Input,\r\n} from \"antd\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { Ace } from \"../base/ace\";\r\nimport JSON5 from \"json5\";\r\nimport { mock } from \"mockjs\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport function BaseData() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n  const [handleId, setHandleId] = useState(null);\r\n  const aceRef = useRef(null);\r\n  const [form] = Form.useForm();\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      width: 70,\r\n      align: \"center\",\r\n      render: (text, record, index) => `${index + 1}`,\r\n    },\r\n    {\r\n      title: \"名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"说明\",\r\n      dataIndex: \"remark\",\r\n      key: \"remark\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: 270,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Space>\r\n          <Button\r\n            size=\"small\"\r\n            onClick={() => editBaseData(record._id)}\r\n            type=\"primary\"\r\n            icon={<EditOutlined />}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Popconfirm\r\n            title=\"您确定要删除该模板数据吗?\"\r\n            onConfirm={() => {\r\n              deleteBaseData(record._id);\r\n            }}\r\n            okText=\"确定\"\r\n            cancelText=\"不删了\"\r\n          >\r\n            <Button size=\"small\" danger icon={<DeleteOutlined />}>\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!handleId || !visible) return;\r\n\r\n    Axios.post(\"/api/get-base-data-by-id\", { id: handleId }).then((res) => {\r\n      if (res.data.success) {\r\n        form.setFieldsValue({\r\n          name: res.data.data.name,\r\n          remark: res.data.data.remark,\r\n        });\r\n        aceRef.current.editor.setValue(JSON5.parse(res.data.data.aceData));\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  }, [handleId, form, visible]);\r\n\r\n  const editBaseData = (id) => {\r\n    setHandleId(id);\r\n    setVisible(true);\r\n  };\r\n\r\n  const deleteBaseData = (id) => {\r\n    Axios.post(\"/api/delete-base-data\", { id }).then((res) => {\r\n      if (res.data.success) {\r\n        message.success(\"删除成功\");\r\n        getList();\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getList = () => {\r\n    Axios.get(\"/api/get-base-list\").then((res) => {\r\n      if (res.data.success) {\r\n        setDataSource(res.data.data);\r\n      } else {\r\n        message.error(res.data.errorMsg);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  // 获取响应数据\r\n  const jsonValue = () => {\r\n    if (!aceRef.current.getValue()) {\r\n      message.error(\"请输入响应数据\");\r\n      return false;\r\n    }\r\n    try {\r\n      return JSON5.parse(aceRef.current.getValue());\r\n    } catch (reason) {\r\n      console.log(reason);\r\n      message.error(\"json 解析出错\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        const jsonData = jsonValue();\r\n        if (!jsonData) return;\r\n        const param = {\r\n          name: values.name,\r\n          remark: values.remark,\r\n          data: mock(jsonData),\r\n          aceData: JSON5.stringify(aceRef.current.getValue()),\r\n        };\r\n        if (handleId) {\r\n          // 编辑\r\n          param.id = handleId;\r\n        }\r\n        setConfirmLoading(true);\r\n        Axios.post(\"/api/update-base-data\", param).then((res) => {\r\n          if (res.data.success) {\r\n            form.resetFields();\r\n            setConfirmLoading(false);\r\n            aceRef.current.editor.setValue(\"\");\r\n            message.success(\"保存成功\");\r\n            getList();\r\n            setVisible(false);\r\n          } else {\r\n            message.error(res.data.errorMsg);\r\n          }\r\n        });\r\n      })\r\n      .catch((reason) => console.log(reason));\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"pb-10\">\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setVisible(true);\r\n            setHandleId(null);\r\n          }}\r\n        >\r\n          新增\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        rowKey={(record) => record._id}\r\n        pagination={false}\r\n      />\r\n      <Modal\r\n        title=\"新增响应数据\"\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={() => {\r\n          form.resetFields();\r\n          setConfirmLoading(false);\r\n          aceRef.current.editor.setValue(\"\");\r\n          setVisible(false);\r\n        }}\r\n        centered={true}\r\n        confirmLoading={confirmLoading}\r\n        forceRender={true}\r\n        width={900}\r\n      >\r\n        <Row>\r\n          <Col span={8} className=\"pr-10\">\r\n            <Form\r\n              form={form}\r\n              name=\"basic\"\r\n              layout=\"vertical\"\r\n              initialValues={{\r\n                name: \"\",\r\n                remark: \"\",\r\n              }}\r\n            >\r\n              <Form.Item\r\n                label=\"名称\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: \"请输入名称\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"说明\" name=\"remark\">\r\n                <TextArea autoComplete=\"off\" />\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n          <Col span={16}>\r\n            <h4>响应数据</h4>\r\n            <Ace ref={aceRef} height=\"340px\"></Ace>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Table, message, Button, Modal, Form, Input, Popconfirm } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nexport function Prefix() {\n  const [dataSource, setDataSource] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const deletePrefix = (id) => {\n    Axios.post(\"/api/delete-prefix\", { id: id }).then((res) => {\n      if (res.data.success) {\n        message.success(\"删除成功\");\n        getList();\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  };\n\n  const columns = [\n    {\n      title: \"序号\",\n      width: 70,\n      align: \"center\",\n      render: (text, record, index) => `${index + 1}`,\n    },\n    {\n      title: \"前缀\",\n      dataIndex: \"code\",\n      key: \"code\",\n    },\n    {\n      title: \"说明\",\n      dataIndex: \"remark\",\n      key: \"remark\",\n    },\n    {\n      title: \"操作\",\n      width: 270,\n      align: \"center\",\n      render: (text, record, index) => (\n        <Popconfirm\n          title=\"您确定要删除该前缀吗?\"\n          onConfirm={() => {\n            deletePrefix(record._id);\n          }}\n          okText=\"确定\"\n          cancelText=\"不删了\"\n        >\n          <Button size=\"small\" danger icon={<DeleteOutlined />}>\n            删除\n          </Button>\n        </Popconfirm>\n      ),\n    },\n  ];\n\n  const getList = () => {\n    Axios.get(\"/api/get-prefix-list\").then((res) => {\n      if (res.data.success) {\n        setDataSource(res.data.data);\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then((values) => {\n        const param = {\n          code: values.code.startsWith(\"/\") ? values.code : `/${values.code}`,\n          remark: values.remark,\n        };\n        setConfirmLoading(true);\n        Axios.post(\"/api/add-prefix\", param).then((res) => {\n          if (res.data.success) {\n            setConfirmLoading(false);\n            form.resetFields();\n            setVisible(false);\n            getList();\n          } else {\n            message.error(res.data.errorMsg);\n          }\n        });\n      })\n      .catch((reason) => console.log(reason));\n  };\n\n  return (\n    <div>\n      <div className=\"pb-10\">\n        <Button type=\"primary\" onClick={() => setVisible(true)}>\n          新增\n        </Button>\n      </div>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        rowKey={(record) => record._id}\n        pagination={false}\n      />\n      <Modal\n        title=\"新增前缀\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={() => setVisible(false)}\n        centered={true}\n        confirmLoading={confirmLoading}\n      >\n        <Form\n          form={form}\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            code: \"\",\n            delay: 200,\n          }}\n        >\n          <Form.Item\n            label=\"前缀\"\n            name=\"code\"\n            rules={[{ required: true, message: \"请输入接口前缀\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item label=\"说明\" name=\"remark\">\n            <Input autoComplete=\"off\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Button, Radio, message } from \"antd\";\nimport Axios from \"axios\";\n\nconst layout = {\n  labelCol: { span: 3 },\n  wrapperCol: { span: 8 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 3, span: 8 },\n};\nexport function Project() {\n  const [form] = Form.useForm();\n\n  const [configId, setConfigId] = useState(null);\n  useEffect(() => {\n    Axios.get(\"/api/get-config\").then((res) => {\n      if (res.data.success) {\n        if (!res.data.data.target) return;\n        form.setFieldsValue({\n          target: res.data.data.target,\n          delay: res.data.data.delay,\n          changeOrigin: res.data.data.changeOrigin,\n        });\n        setConfigId(res.data.data._id);\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  }, [setConfigId, form]);\n\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n    const param = {\n      target: values.target,\n      delay: values.delay,\n      id: configId,\n      changeOrigin: values.changeOrigin,\n    };\n    Axios.post(\"/api/update-config\", param).then((res) => {\n      if (res.data.success) {\n        message.success(\"保存成功\");\n      } else {\n        message.error(res.data.errorMsg);\n      }\n    });\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div className=\"p-20\">\n      <Form\n        form={form}\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          changeOrigin: false,\n          delay: 200,\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"代理地址\"\n          name=\"target\"\n          rules={[{ required: true, message: \"请输入项目代理地址\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"响应延时\"\n          name=\"delay\"\n          rules={[{ required: true, message: \"请输入Mock接口响应延时!\" }]}\n        >\n          <Input autoComplete=\"off\" />\n        </Form.Item>\n\n        <Form.Item label=\"变更来源\" name=\"changeOrigin\">\n          <Radio.Group>\n            <Radio value={true}>变更</Radio>\n            <Radio value={false}>不变更</Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n","import { Home } from \"./pages/home\";\nimport { BaseData } from \"./pages/base-data\";\nimport { Prefix } from \"./pages/prefix\";\nimport { Project } from \"./pages/project\";\nimport { Document } from \"./pages/document\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    component: Home,\n    exact: true,\n    title: \"接口列表\"\n  },\n  {\n    path: \"/base-data\",\n    component: BaseData,\n    title: \"响应数据维护\"\n    // routes: [\n    //   {\n    //     path: \"/tacos/bus\",\n    //     component: Bus\n    //   }\n    // ]\n  },\n  {\n    path: \"/prefix\",\n    component: Prefix,\n    title: \"接口前缀维护\"\n  },\n  {\n    path: \"/project\",\n    component: Project,\n    title: \"项目配置维护\"\n  },\n  {\n    path: \"/document\",\n    component: Document,\n    title: \"文档说明\"\n  },\n];\n","import React from 'react';\n\nexport function Document() {\n  return (\n    <div>Document</div>\n  )\n}","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\nimport { routes } from \"../router\";\r\n\r\nfunction Header(props) {\r\n  let count = '1';\r\n  for (let i = 0; i < routes.length; i++) {\r\n    if (routes[i].path === props.history.location.pathname) {\r\n      count = `${i + 1}`\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div style={{ float: 'left', fontSize: '20px', marginRight: '20px', height: '64px' }} >SNAKE-API <small>mini</small></div>\r\n      <Menu mode=\"horizontal\" defaultSelectedKeys={[count]} className=\"float-left\">\r\n        <Menu.Item key=\"1\">\r\n          <Link to=\"/\">接口列表</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\">\r\n          <Link to=\"/base-data\">响应数据维护</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\">\r\n          <Link to=\"/prefix\">接口前缀维护</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"4\">\r\n          <Link to=\"/project\">项目配置维护</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"5\">\r\n          <Link to=\"/document\">文档说明</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div className=\"float-right\">\r\n        <a href=\"https://www.snake-api.com\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"mr-20\">SNAKE-API 官网</a>\r\n        <a href=\"https://gitee.com/seebin/mock-data/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n          <img src='https://gitee.com/seebin/mock-data/badge/star.svg?theme=dark' alt='star'></img>\r\n        </a>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\nimport { Breadcrumb } from \"antd\";\n\nexport default function Content(props) {\n  const warp = {\n    padding: \"66px 20px 0 20px\",\n    minHeight: \"calc(100vh - 42px)\",\n  };\n  return (\n    <div style={warp}>\n      <Breadcrumb style={{ padding: \"10px 0\" }}>\n        <Breadcrumb.Item>接口列表</Breadcrumb.Item>\n      </Breadcrumb>\n      {props.children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport SnakeHeader from \"./base/header\";\nimport SnakeContent from \"./base/content\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { routes } from \"./router\";\nimport { Layout } from \"antd\";\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Header\n          className=\"header\"\n          style={{\n            position: \"fixed\",\n            zIndex: 1,\n            width: \"100%\",\n            padding: \"0 20px\",\n          }}\n        >\n          <SnakeHeader />\n        </Header>\n        <Content>\n          <SnakeContent>\n            <Switch>\n              {routes.map((route, i) => (\n                <RouteWithSubRoutes key={route.path} {...route} />\n              ))}\n            </Switch>\n          </SnakeContent>\n        </Content>\n        <Footer style={{ textAlign: \"center\", padding: \"10px\" }}>\n          技术支持：seebin | 钉钉交流群:21958681\n        </Footer>\n      </Layout>\n    </Router>\n  );\n}\n\nfunction RouteWithSubRoutes(route) {\n  document.title = route.title;\n  return (\n    <Route\n      exact={route.exact}\n      path={route.path}\n      render={(props) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zhCN from \"antd/es/locale/zh_CN\";\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <App />\r\n  </ConfigProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}