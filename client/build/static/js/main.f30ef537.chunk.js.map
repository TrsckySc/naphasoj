{"version":3,"sources":["utils/load-script.js","base/ace.js","pages/home.js","router.js","pages/base-data.js","pages/prefix.js","pages/project.js","pages/document.js","base/header.js","base/content.js","App.js","serviceWorker.js","index.js"],"names":["load","src","isAsync","Promise","resolve","reject","script","document","createElement","async","onload","onerror","body","appendChild","Ace","props","srcList","emp","forEach","a","LoadScript","then","setState","isLoadAce","catch","reason","console","error","state","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","this","window","ace","owner","editor","edit","setTheme","JavaScriptMode","require","Mode","session","setMode","tangideCompleter","identifierRegexps","getCompletions","pos","prefix","callback","length","autoCompleteData","name","value","caption","meta","type","score","setOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","addCompleter","commands","addCommand","bindKey","win","mac","exec","ele","getElementById","isFullScreen","launchFullscreen","readOnly","getSession","setTabSize","initAce","id","style","width","height","position","React","Component","Option","Search","useForm","form","useState","forceUpdate","useEffect","layout","onFinish","values","onSearch","Item","placeholder","shouldUpdate","htmlType","HandleBtn","className","float","onClick","openDrawer","icon","PlusCircleOutlined","ImportOutlined","danger","DeleteOutlined","PageTable","handleChange","option","onHandleTableRow","mockStatusList","label","columns","title","align","render","text","record","index","dataIndex","key","method","color","toUpperCase","CopyOutlined","defaultValue","isOpen","onChange","map","mockStatus","_id","isLock","size","LockOutlined","UnlockOutlined","EyeOutlined","EditOutlined","onConfirm","okText","cancelText","dataSource","rowKey","pagination","HandleInterface","span","labelCol","wrapperCol","initialValues","log","onFinishFailed","errorInfo","rules","required","message","Group","compact","noStyle","dropdownMatchSelectWidth","href","buttonStyle","Button","routes","path","component","filter","setFilter","tableList","setTableList","drawer","setDrawer","getListData","url","page","param","rows","Axios","post","res","data","success","list","initSearch","table","Object","assign","errorMsg","placement","destroyOnClose","forceRender","onClose","visible","footer","textAlign","marginRight","exact","withRouter","count","i","history","location","pathname","fontSize","mode","defaultSelectedKeys","to","Content","padding","minHeight","children","Header","Footer","RouteWithSubRoutes","route","App","zIndex","Boolean","hostname","match","ReactDOM","locale","zhCN","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f30ef537.chunk.js","sourcesContent":["/**\r\n * 批量异步加载script脚本\r\n * @param {*} srcList src地址集合\r\n */\r\nexport function AsyncLoadScript(srcList) {\r\n  let scPromise = [];\r\n  srcList.forEach((src) => {\r\n    scPromise.push(load(src, true));\r\n  });\r\n  return Promise.all(scPromise);\r\n}\r\n\r\n/**\r\n * 批量同步加载script脚本\r\n * @param {*} srcList \r\n */\r\nexport function LoadScript(srcList) {\r\n  let emp = true;\r\n  srcList.forEach(async (src) => {\r\n    try {\r\n      await load(src, false);\r\n    } catch (reason) {\r\n      emp = false;\r\n    }\r\n  });\r\n  return new Promise((resolve, reject) => {\r\n    if (emp) {\r\n      resolve();\r\n    } else {\r\n      reject();\r\n    }\r\n  });\r\n}\r\nfunction load(src, isAsync) {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = src;\r\n    script.async = isAsync;\r\n    script.onload = function () {\r\n      resolve();\r\n    };\r\n    script.onerror = function () {\r\n      reject();\r\n    };\r\n    document.body.appendChild(script);\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { LoadScript } from \"../utils/load-script\";\r\n\r\nexport class Ace extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    LoadScript([\r\n      \"./lib/ace-1.4.4/src/ace.js\",\r\n      \"./lib/ace-1.4.4/src/theme-chrome.js\",\r\n      \"./lib/ace-1.4.4/src/mode-json.js\",\r\n      \"./lib/ace-1.4.4/src/snippets/json.js\",\r\n      \"./lib/ace-1.4.4/src/ext-language_tools.js\",\r\n    ])\r\n      .then(() => {\r\n        this.setState({\r\n          isLoadAce: true\r\n        })\r\n      })\r\n      .catch((reason) => {\r\n        console.error('>>>>>>', reason);\r\n      });\r\n    this.state = {\r\n      isLoadAce: false\r\n    }\r\n  }\r\n  // 启动全屏\r\n  launchFullscreen(element) {\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  // 退出全屏\r\n  exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n\r\n  initAce() {\r\n    if (!this.state.isLoadAce || !window.ace) return;\r\n    const owner = this;\r\n    const editor = window.ace.edit(\"interface-data\");\r\n    editor.setTheme(\"ace/theme/chrome\"); //设置主题\r\n    var JavaScriptMode = window.ace.require(\"ace/mode/json\").Mode;\r\n    editor.session.setMode(new JavaScriptMode()); //设置程序语言模式\r\n\r\n    // 设置自动补全\r\n    var tangideCompleter = {\r\n      identifierRegexps: [/[a-zA-Z_0-9@\\-\\u00A2-\\uFFFF]/],\r\n      getCompletions: function (editor, session, pos, prefix, callback) {\r\n        if (prefix.length === 0) {\r\n          return callback(null, []);\r\n        } else {\r\n          return callback(null, autoCompleteData);\r\n        }\r\n      },\r\n    };\r\n    // 自定义补全列表\r\n    var autoCompleteData = [\r\n      {\r\n        name: \"mock string\",\r\n        value: \"@string\",\r\n        caption: \"@string\",\r\n        meta: \"Mock-String\",\r\n        type: \"local\",\r\n        score: 1000,\r\n      },\r\n      {\r\n        name: \"mock number\",\r\n        value: \"@number\",\r\n        caption: \"@number\",\r\n        meta: \"Mock-Number\",\r\n        score: 1000,\r\n      },\r\n      {\r\n        name: \"mock integer\",\r\n        value: \"@integer\",\r\n        caption: \"@integer\",\r\n        meta: \"Mock-Integer\",\r\n        score: 1000,\r\n      },\r\n      // {\r\n      //   name: \"mock image\",\r\n      //   value: Random.image(\"200x100\"),\r\n      //   caption: \"@image\",\r\n      //   meta: \"Mock-Image\",\r\n      //   score: 1000,\r\n      // },\r\n    ];\r\n    editor.setOptions({\r\n      enableBasicAutocompletion: true,\r\n      enableSnippets: true,\r\n      enableLiveAutocompletion: true,\r\n    });\r\n    var langTools = window.ace.require(\"ace/ext/language_tools\");\r\n    langTools.addCompleter(tangideCompleter);\r\n\r\n    // 设置全屏\r\n    editor.commands.addCommand({\r\n      name: \"fullscreen\",\r\n      bindKey: { win: \"Ctrl-Enter\", mac: \"Command-Enter\" },\r\n      exec: function (editor) {\r\n        var ele = document.getElementById(\"interface-data\");\r\n        if (editor.isFullScreen) {\r\n          owner.exitFullscreen();\r\n          editor.isFullScreen = false;\r\n        } else {\r\n          owner.launchFullscreen(ele);\r\n          editor.isFullScreen = true;\r\n        }\r\n      },\r\n      readOnly: true, // 只读下设置可以全屏展示\r\n    });\r\n\r\n    // editor.getSession().setUseWrapMode(true);//设置折叠 默认折叠的\r\n    editor.getSession().setTabSize(2); // 设置制表符大小\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.initAce();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"interface-data\"\r\n        style={{ width: \"100%\", height: \"400px\", position: \"relative\" }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Tag,\r\n  Select,\r\n  Space,\r\n  message,\r\n  Popconfirm,\r\n  Drawer,\r\n  Row,\r\n  Col,\r\n  Radio,\r\n} from \"antd\";\r\nimport {\r\n  PlusCircleOutlined,\r\n  ImportOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  EyeOutlined,\r\n  LockOutlined,\r\n  UnlockOutlined,\r\n  CopyOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport { Ace } from \"../base/ace\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport function Home() {\r\n  const [filter, setFilter] = useState({});\r\n\r\n  const [tableList, setTableList] = useState([]);\r\n\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  const getListData = (name, url, page) => {\r\n    const param = {\r\n      name,\r\n      url,\r\n      page: 1,\r\n      rows: 20,\r\n    };\r\n    console.log(param);\r\n    Axios.post(\"/api/get-interface-list\", param).then((res) => {\r\n      if (res.data.success) {\r\n        setTableList(res.data.data.list);\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getListData(filter.name, filter.url, 1);\r\n  }, [filter]);\r\n\r\n  function handleTableRow(type, value, id) {\r\n    console.log(type, value, id);\r\n    if (type === \"changeMock\") {\r\n      Axios.post(\"/api/change-interface-mock-status\", {\r\n        id,\r\n        isOpen: value === \"open\",\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(value === \"open\" ? \"成功启用\" : \"接口已停用\");\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isOpen: value === \"open\",\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"changeLock\") {\r\n      Axios.post(\"/api/change-interface-lock-status\", {\r\n        id,\r\n        isLock: value,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\r\n            value ? \"接口已锁，将无法编辑与删除操作\" : \"接口已解锁\"\r\n          );\r\n          const table = tableList.map((data) => {\r\n            if (id === data._id) {\r\n              return Object.assign(data, {\r\n                isLock: value,\r\n              });\r\n            }\r\n            return data;\r\n          });\r\n          // 更改列表数据\r\n          setTableList(table);\r\n        } else {\r\n          message.error(res.data.errorMsg);\r\n        }\r\n      });\r\n    } else if (type === \"delete\") {\r\n      Axios.post(\"/api/delete-interface\", {\r\n        id,\r\n      }).then((res) => {\r\n        if (res.data.success) {\r\n          message.success(\"删除成功\");\r\n          // 重新查询数据\r\n          getListData(filter.name, filter.url, 1);\r\n        } else {\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Search\r\n        onSearch={(values) => {\r\n          setFilter(values);\r\n        }}\r\n      ></Search>\r\n      <HandleBtn\r\n        initSearch={() => {\r\n          getListData();\r\n        }}\r\n        openDrawer={() => {\r\n          setDrawer(true);\r\n        }}\r\n      ></HandleBtn>\r\n      <PageTable\r\n        dataSource={tableList}\r\n        onHandleTableRow={handleTableRow}\r\n      ></PageTable>\r\n\r\n      <Drawer\r\n        title=\"接口说明\"\r\n        placement=\"left\"\r\n        destroyOnClose={true}\r\n        forceRender={true}\r\n        onClose={() => setDrawer(false)}\r\n        visible={drawer}\r\n        width=\"80%\"\r\n        footer={\r\n          <div\r\n            style={{\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            <Button onClick={() => setDrawer(false)} style={{ marginRight: 8 }}>\r\n              关闭\r\n            </Button>\r\n            <Button type=\"primary\">保存</Button>\r\n          </div>\r\n        }\r\n      >\r\n        <HandleInterface></HandleInterface>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState();\r\n\r\n  // To disable submit button at the beginning.\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n\r\n  const onFinish = (values) => {\r\n    props.onSearch(values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name=\"horizontal_login\"\r\n      layout=\"inline\"\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item name=\"name\">\r\n        <Input placeholder=\"请输入接口名称\" />\r\n      </Form.Item>\r\n      <Form.Item name=\"url\">\r\n        <Input placeholder=\"请输入接口地址\" />\r\n      </Form.Item>\r\n      <Form.Item shouldUpdate={true}>\r\n        {() => (\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            查 询\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\nfunction HandleBtn(props) {\r\n  return (\r\n    <div className=\"pt-20 pb-20 clearfix\">\r\n      <div style={{ float: \"left\" }}>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => props.openDrawer()}\r\n          icon={<PlusCircleOutlined />}\r\n        >\r\n          新建接口\r\n        </Button>\r\n        <Button type=\"dashed\" icon={<ImportOutlined />} className=\"ml-20\">\r\n          导入Swagger 接口\r\n        </Button>\r\n      </div>\r\n      <div style={{ float: \"right\" }}>\r\n        <Button danger icon={<DeleteOutlined />}>\r\n          清空当前所有接口\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PageTable(props) {\r\n  function handleChange(value, option) {\r\n    props.onHandleTableRow(\"changeMock\", value, option.id);\r\n  }\r\n\r\n  const mockStatusList = [\r\n    {\r\n      value: \"open\",\r\n      label: \"启用中\",\r\n    },\r\n    {\r\n      value: \"close\",\r\n      label: \"停用中\",\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      title: \"序号\",\r\n      width: 70,\r\n      align: \"center\",\r\n      render: (text, record, index) => `${index + 1}`,\r\n    },\r\n    {\r\n      title: \"接口名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"接口类型\",\r\n      dataIndex: \"method\",\r\n      key: \"method\",\r\n      align: \"center\",\r\n      render: (method) => (\r\n        <Tag color={method === \"POST\" ? \"#52c41a\" : \"#1890ff\"}>\r\n          {method.toUpperCase()}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"接口前缀\",\r\n      dataIndex: \"prefix\",\r\n      key: \"prefix\",\r\n    },\r\n    {\r\n      title: \"接口地址\",\r\n      dataIndex: \"path\",\r\n      key: \"path\",\r\n      render: (text) => (\r\n        <>\r\n          <CopyOutlined className=\"pr-10\" />\r\n          <span>{text}</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Mock启用状态\",\r\n      dataIndex: \"isOpen\",\r\n      key: \"isOpen\",\r\n      width: 150,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Select\r\n          defaultValue={record.isOpen ? \"open\" : \"close\"}\r\n          style={{\r\n            width: 100,\r\n            color: record.isOpen ? \"#52c41a\" : \"#ff4d4f\",\r\n          }}\r\n          onChange={handleChange}\r\n        >\r\n          {mockStatusList.map((mockStatus) => {\r\n            return (\r\n              <Option\r\n                value={mockStatus.value}\r\n                key={mockStatus.value}\r\n                id={record._id}\r\n              >\r\n                {mockStatus.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      ),\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      width: 270,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <Space>\r\n          {record.isLock ? (\r\n            <>\r\n              <Button\r\n                type=\"link\"\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  props.onHandleTableRow(\"changeLock\", false, record._id)\r\n                }\r\n                icon={<LockOutlined />}\r\n              />\r\n            </>\r\n          ) : (\r\n              <Button\r\n                type=\"link\"\r\n                size=\"small\"\r\n                onClick={() =>\r\n                  props.onHandleTableRow(\"changeLock\", true, record._id)\r\n                }\r\n                icon={<UnlockOutlined />}\r\n              />\r\n            )}\r\n          <Button size=\"small\" type=\"primary\" icon={<EyeOutlined />}>\r\n            查看\r\n          </Button>\r\n          {!record.isLock ? (\r\n            <>\r\n              <Button size=\"small\" icon={<EditOutlined />}>\r\n                编辑\r\n              </Button>\r\n              <Popconfirm\r\n                title=\"您确定要删除该接口吗?\"\r\n                onConfirm={() => {\r\n                  props.onHandleTableRow(\"delete\", null, record._id);\r\n                }}\r\n                okText=\"确定\"\r\n                cancelText=\"不删了\"\r\n              >\r\n                <Button size=\"small\" danger icon={<DeleteOutlined />}>\r\n                  删除\r\n                </Button>\r\n              </Popconfirm>\r\n            </>\r\n          ) : null}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      dataSource={props.dataSource}\r\n      rowKey={(record) => record._id}\r\n      pagination={false}\r\n    />\r\n  );\r\n}\r\n\r\nfunction HandleInterface(props) {\r\n  const layout = {\r\n    labelCol: { span: 0 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      {/* 表单项 */}\r\n      <Col span={10} className=\"pr-10\">\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{ method: \"GET\", prefix: \"\" }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <h4>接口名称</h4>\r\n          <Form.Item\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"请输入接口名称!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <h4>接口地址</h4>\r\n          <Form.Item>\r\n            <Input.Group compact>\r\n              <Form.Item\r\n                name=\"method\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"请选择请求方式\" }]}\r\n              >\r\n                <Select style={{ width: \"20%\" }} placeholder=\"请选择请求方式\">\r\n                  <Option value=\"GET\">GET</Option>\r\n                  <Option value=\"POST\">POST</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"prefix\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"请选择接口前缀\" }]}\r\n              >\r\n                <Select\r\n                  style={{ width: \"30%\" }}\r\n                  placeholder=\"请选择接口前缀\"\r\n                  dropdownMatchSelectWidth={false}\r\n                >\r\n                  <Option value=\"\">无接口前缀</Option>\r\n                  <Option value=\"/ylh-service-cloud-user-dev\">\r\n                    /ylh-service-cloud-user-dev\r\n                  </Option>\r\n                  <Option value=\"/ylh-service-cloud-goods-dev\">\r\n                    /ylh-service-cloud-goods-dev\r\n                  </Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"path\"\r\n                noStyle\r\n                rules={[{ required: true, message: \"请输入接口地址\" }]}\r\n              >\r\n                <Input style={{ width: \"50%\" }} placeholder=\"请输入接口地址\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n      {/* 代码编辑与预览 */}\r\n      <Col span={14} className=\"pl-10\">\r\n        <h4>\r\n          <span className=\"mr-10\">响应数据</span>\r\n          <a href=\"#!\" style={{ color: \"#6c757d\" }}>\r\n            如何生成随机数据?\r\n          </a>\r\n        </h4>\r\n        <div className=\"clearfix\">\r\n          <Radio.Group\r\n            className=\"float-left\"\r\n            defaultValue=\"1\"\r\n            size=\"small\"\r\n            buttonStyle=\"solid\"\r\n          >\r\n            <Radio.Button value=\"1\">编辑</Radio.Button>\r\n            <Radio.Button value=\"2\">预览</Radio.Button>\r\n          </Radio.Group>\r\n          <div className=\"float-right\">\r\n            <Space>\r\n              <a href=\"#!\">初始基础数据</a>\r\n              <a href=\"#!\">初始基础分页数据</a>\r\n            </Space>\r\n          </div>\r\n        </div>\r\n        <div className=\"pt-10\">\r\n          <Ace></Ace>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Home } from \"./pages/home\";\nimport { BaseData } from \"./pages/base-data\";\nimport { Prefix } from \"./pages/prefix\";\nimport { Project } from \"./pages/project\";\nimport { Document } from \"./pages/document\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    component: Home,\n    exact: true,\n    title: \"接口列表\"\n  },\n  {\n    path: \"/base-data\",\n    component: BaseData,\n    title: \"响应数据维护\"\n    // routes: [\n    //   {\n    //     path: \"/tacos/bus\",\n    //     component: Bus\n    //   }\n    // ]\n  },\n  {\n    path: \"/prefix\",\n    component: Prefix,\n    title: \"接口前缀维护\"\n  },\n  {\n    path: \"/project\",\n    component: Project,\n    title: \"项目配置维护\"\n  },\n  {\n    path: \"/document\",\n    component: Document,\n    title: \"文档说明\"\n  },\n];\n","import React from 'react';\n\nexport function BaseData() {\n  return (\n    <div>BaseData</div>\n  )\n}","import React from 'react';\n\nexport function Prefix() {\n  return (\n    <div>Prefix</div>\n  )\n}","import React from 'react';\n\nexport function Project() {\n  return (\n    <div>Project</div>\n  )\n}","import React from 'react';\n\nexport function Document() {\n  return (\n    <div>Document</div>\n  )\n}","import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu } from \"antd\";\nimport { routes } from \"../router\";\n\nfunction Header(props) {\n  let count = '1';\n  for (let i = 0; i < routes.length; i++) {\n    if (routes[i].path === props.history.location.pathname) {\n      count = `${i + 1}`\n    }\n  }\n  return (\n    <Fragment>\n      <div style={{ float: 'left', fontSize: '20px', marginRight: '20px', height: '64px' }} >SNAKE-API <small>mini</small></div>\n      <Menu mode=\"horizontal\" defaultSelectedKeys={[count]}>\n        <Menu.Item key=\"1\">\n          <Link to=\"/\">接口列表</Link>\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          <Link to=\"/base-data\">响应数据维护</Link>\n        </Menu.Item>\n        <Menu.Item key=\"3\">\n          <Link to=\"/prefix\">接口前缀维护</Link>\n        </Menu.Item>\n        <Menu.Item key=\"4\">\n          <Link to=\"/project\">项目配置维护</Link>\n        </Menu.Item>\n        <Menu.Item key=\"5\">\n          <Link to=\"/document\">文档说明</Link>\n        </Menu.Item>\n      </Menu>\n    </Fragment>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { Breadcrumb } from \"antd\";\n\nexport default function Content(props) {\n  const warp = {\n    padding: \"66px 20px 0 20px\",\n    minHeight: \"calc(100vh - 42px)\",\n  };\n  return (\n    <div style={warp}>\n      <Breadcrumb style={{ padding: \"10px 0\" }}>\n        <Breadcrumb.Item>接口列表</Breadcrumb.Item>\n      </Breadcrumb>\n      {props.children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport SnakeHeader from \"./base/header\";\nimport SnakeContent from \"./base/content\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { routes } from \"./router\";\nimport { Layout } from \"antd\";\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Header\n          className=\"header\"\n          style={{\n            position: \"fixed\",\n            zIndex: 1,\n            width: \"100%\",\n            padding: \"0 20px\",\n          }}\n        >\n          <SnakeHeader />\n        </Header>\n        <Content>\n          <SnakeContent>\n            <Switch>\n              {routes.map((route, i) => (\n                <RouteWithSubRoutes key={route.path} {...route} />\n              ))}\n            </Switch>\n          </SnakeContent>\n        </Content>\n        <Footer style={{ textAlign: \"center\", padding: \"10px\" }}>\n          技术支持：seebin | 钉钉交流群:21958681\n        </Footer>\n      </Layout>\n    </Router>\n  );\n}\n\nfunction RouteWithSubRoutes(route) {\n  document.title = route.title;\n  return (\n    <Route\n      exact={route.exact}\n      path={route.path}\n      render={(props) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ConfigProvider } from \"antd\";\nimport zhCN from \"antd/es/locale/zh_CN\";\n\nReactDOM.render(\n  <ConfigProvider locale={zhCN}>\n    <App />\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}